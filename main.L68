00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/26/2022 2:44:06 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : motorola 68k disassembler prototype
00000000                             3  * Written by : Harper Hults
00000000                             4  * Date       : 5/25/22
00000000                             5  * Description: allows for decoding of MOVEB and MOVEQ opcodes.
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:
00001000                             9      *JSR WELCOME
00001000  247C 00005000             10      MOVEA.L #$5000,A2    * for testing
00001006  267C 00005020             11      MOVEA.L #$5020,A3
0000100C  284A                      12      MOVEA.L  A2,A4      * does this need to be W depending on where in mem start is?
0000100E                            13      
0000100E  4EB9 00001054             14      JSR BUILDTREE
00001014                            15      
00001014  4EB9 000011D8             16  NEXTLINE JSR DECODE_OP
0000101A  B7CC                      17           CMP.L A4,A3
0000101C  6700 0006                 18           BEQ DONE
00001020  544C                      19           ADDA.W #2,A4
00001022  60F0                      20           BRA NEXTLINE
00001024                            21  
00001024                            22  
00001024                            23  DONE                * end program
00001024  103C 0009                 24      MOVE.B  #9,D0
00001028  4E4F                      25      TRAP    #15
0000102A                            26      
0000102A                            27  WELCOME
0000102A  43F9 00001374             28      LEA PROMPT1,A1  * get start memory value, put in A2
00001030  103C 000E                 29      MOVE.B #14,D0
00001034  4E4F                      30      TRAP #15
00001036  103C 0004                 31      MOVE.B #4,D0
0000103A  4E4F                      32      TRAP #15
0000103C  2441                      33      MOVEA.L D1,A2
0000103E                            34      
0000103E  43F9 000013B0             35      LEA PROMPT2,A1  * get end memory value, put in D3
00001044  103C 000E                 36      MOVE.B #14,D0
00001048  4E4F                      37      TRAP #15
0000104A  103C 0004                 38      MOVE.B #4,D0
0000104E  4E4F                      39      TRAP #15
00001050  2641                      40      MOVEA.L D1,A3
00001052  4E75                      41      RTS
00001054                            42      
00001054                            43  BUILDTREE
00001054  303C 0000                 44          MOVE.W #0,D0
00001058  2279 00001370             45          MOVEA.L TREE,A1
0000105E  22FC 000011E8             46  BLDLOOP MOVE.L #UNDEF,(A1)+    * initialize whole tree to undefined
00001064  5240                      47          ADDQ #1,D0
00001066  B07C 0201                 48          CMP.W #513,D0
0000106A  66F2                      49          BNE BLDLOOP
0000106C                            50          
0000106C  2279 00001370             51          MOVEA.L TREE,A1
00001072                            52  
00001072  22FC 00001338             53          MOVE.L #TESTBIT,(A1)+  * nodes 0 - 11 are decision nodes
00001078  22FC 00001338             54          MOVE.L #TESTBIT,(A1)+
0000107E  22FC 00001338             55          MOVE.L #TESTBIT,(A1)+
00001084  22FC 00001338             56          MOVE.L #TESTBIT,(A1)+
0000108A  22FC 00001338             57          MOVE.L #TESTBIT,(A1)+
00001090  22FC 00001338             58          MOVE.L #TESTBIT,(A1)+
00001096  22FC 00001338             59          MOVE.L #TESTBIT,(A1)+
0000109C  22FC 00001338             60          MOVE.L #TESTBIT,(A1)+
000010A2  22FC 00001338             61          MOVE.L #TESTBIT,(A1)+
000010A8  22FC 00001338             62          MOVE.L #TESTBIT,(A1)+
000010AE  22FC 00001338             63          MOVE.L #TESTBIT,(A1)+
000010B4  22FC 00001338             64          MOVE.L #TESTBIT,(A1)+
000010BA  22FC 000011F6             65          MOVE.L #BAD,(A1)+      * node 12 is an invalid code
000010C0  22FC 00001338             66          MOVE.L #TESTBIT,(A1)+  * nodes 13&14 are decision nodes
000010C6  22FC 00001338             67          MOVE.L #TESTBIT,(A1)+
000010CC  22FC 000011F6             68          MOVE.L #BAD,(A1)+      * node 15 is an invalid node
000010D2  22FC 00001204             69          MOVE.L #MOVEB,(A1)+    * put MOVE.B at node 16
000010D8  22FC 00001220             70          MOVE.L #MOVEL,(A1)+    * MOVE.L/MOVEA.L goes at node 17
000010DE  22FC 0000122E             71          MOVE.L #MOVEW,(A1)+    * MOVE.W/MOVEA.W goes at 18
000010E4  22FC 0000124A             72          MOVE.L #NOPETC,(A1)+   * NOP et al. subroutine goes at 19
000010EA  22FC 00001282             73          MOVE.L #ADDQ,(A1)+     * ADDQ goes at 20
000010F0  22FC 00001338             74          MOVE.L #TESTBIT,(A1)+  * 21 is a decision node
000010F6  22FC 00001212             75          MOVE.L #MOVEQ,(A1)+    * MOVEQ goes at 22
000010FC  22FC 000011F6             76          MOVE.L #BAD,(A1)+      * 23 is invalid code
00001102  22FC 0000123C             77          MOVE.L #SUB,(A1)+      * 24 is SUB
00001108                            78          
00001108  5049                      79          ADDA.W #8,A1           * should put us at TREE + $6C
0000110A  22FC 00001290             80          MOVE.L #AND,(A1)+      * node 27 is AND
00001110  22FC 0000129E             81          MOVE.L #ADD,(A1)+      * node 28 is ADD
00001116  22FC 00001338             82          MOVE.L #TESTBIT,(A1)+  * 29 is a decision node
0000111C  22FC 000011F6             83          MOVE.L #BAD,(A1)+      * 30 is invalid code, puts us at TREE + $7C
00001122                            84          
00001122  D2FC 0030                 85          ADDA.W #$30,A1         * go to TREE + $AC which is node 43
00001126  22FC 00001338             86          MOVE.L #TESTBIT,(A1)+  * 43 is decision node
0000112C  22BC 00001338             87          MOVE.L #TESTBIT,(A1)   * 44 is decision node, should be B0
00001132                            88          
00001132  D2FC 003C                 89          ADDA.W #$3C,A1         * should put us at TREE + $EC
00001136  22FC 00001338             90          MOVE.L #TESTBIT,(A1)+  * node 59 is decision
0000113C  22BC 000011F6             91          MOVE.L #BAD,(A1)       * node 60 is invalid code
00001142                            92          
00001142  D2FC 006C                 93          ADDA.W #$6C,A1         * should put us at TREE + $15C
00001146  22FC 000012AC             94          MOVE.L #BRA,(A1)+      * node 87 is BRA
0000114C  22FC 000012BA             95          MOVE.L #BEQ,(A1)+      * node 88 is BEQ
00001152  22FC 000011F6             96          MOVE.L #BAD,(A1)+      * node 89 is an invalid code
00001158  22BC 00001338             97          MOVE.L #TESTBIT,(A1)   * node 90 is a decision node
0000115E                            98          
0000115E  D2FC 0074                 99          ADDA.W #$74,A1         * should put us at TREE + $DC?
00001162  22FC 00001338            100          MOVE.L #TESTBIT,(A1)+  * nodes 119,120 are decision nodes
00001168  22BC 00001338            101          MOVE.L #TESTBIT,(A1)   * A1= TREE + $1E0?
0000116E                           102          
0000116E  D2FC 00F4                103          ADDA.W #$F4,A1         * puts us at TREE + $2D4?
00001172  22FC 000011F6            104          MOVE.L #BAD,(A1)+      * node 181 is an invalid code
00001178  22BC 00001338            105          MOVE.L #TESTBIT,(A1)   * node 182 is a decision node
0000117E                           106          
0000117E  D2FC 00E4                107          ADDA.W #$E4,A1
00001182  22FC 00001338            108          MOVE.L #TESTBIT,(A1)+  * node 239 is a deicsion node
00001188  22FC 00001338            109          MOVE.L #TESTBIT,(A1)+  * node 240 is a deicsion node
0000118E  22FC 000011F6            110          MOVE.L #BAD,(A1)+      * node 241 is an invalid code
00001194  22BC 00001338            111          MOVE.L #TESTBIT,(A1)   * node 242 is a deicsion node
0000119A                           112          
0000119A  D2FC 01EC                113          ADDA.W #$1EC,A1
0000119E  22FC 000012C8            114          MOVE.L #BGT,(A1)+      * node 365 is BGT
000011A4  22BC 000012D6            115          MOVE.L #BLE,(A1)       * node 366 is BLE
000011AA                           116          
000011AA  D2FC 01C4                117          ADDA.W #$1C4,A1
000011AE  22FC 000012E4            118          MOVE.L #ASR,(A1)+      * node 479 is ASR
000011B4  22FC 000012F2            119          MOVE.L #ASL,(A1)+      * node 480 is ASL
000011BA  22FC 00001300            120          MOVE.L #LSR,(A1)+      * node 481 is LSR
000011C0  22BC 0000130E            121          MOVE.L #LSL,(A1)       * node 482 is LSL
000011C6                           122          
000011C6  D2FC 000C                123          ADDA.W #$C,A1
000011CA  22FC 0000131C            124          MOVE.L #ROR,(A1)+      * node 485 is ROR
000011D0  22BC 0000132A            125          MOVE.L #ROL,(A1)       * node 486 is ROL
000011D6                           126          
000011D6  4E75                     127          RTS
000011D8                           128      
000011D8  143C 000F                129  DECODE_OP MOVE.B #$F,D2 * decodes the opcode at A4
000011DC  2A79 00001370            130            MOVEA.L TREE,A5
000011E2  2255                     131            MOVEA.L (A5),A1
000011E4  4E91                     132            JSR (A1)
000011E6  4E75                     133            RTS    
000011E8                           134      
000011E8  43F9 000013EA            135  UNDEF LEA UNDEFINED,A1
000011EE  103C 000E                136        MOVE.B #14,D0
000011F2  4E4F                     137        TRAP #15
000011F4  4E75                     138        RTS 
000011F6                           139        
000011F6  43F9 00001415            140  BAD   LEA BADDATA,A1
000011FC  103C 000E                141        MOVE.B #14,D0
00001200  4E4F                     142        TRAP #15
00001202  4E75                     143        RTS
00001204                           144        
00001204  43F9 0000144B            145  MOVEB  LEA MB,A1
0000120A  103C 000E                146         MOVE.B #14,D0
0000120E  4E4F                     147         TRAP #15
00001210  4E75                     148         RTS 
00001212                           149        
00001212  43F9 00001444            150  MOVEQ LEA MQ,A1
00001218  103C 000E                151         MOVE.B #14,D0
0000121C  4E4F                     152         TRAP #15
0000121E  4E75                     153         RTS
00001220                           154         
00001220  43F9 00001453            155  MOVEL LEA ML,A1
00001226  103C 000E                156        MOVE.B #14,D0
0000122A  4E4F                     157        TRAP #15
0000122C  4E75                     158        RTS
0000122E                           159        
0000122E  43F9 00001463            160  MOVEW LEA MW,A1
00001234  103C 000E                161        MOVE.B #14,D0
00001238  4E4F                     162        TRAP #15
0000123A  4E75                     163        RTS
0000123C                           164        
0000123C  43F9 000014C3            165  SUB   LEA SB,A1
00001242  103C 000E                166         MOVE.B #14,D0
00001246  4E4F                     167         TRAP #15
00001248  4E75                     168         RTS      
0000124A                           169        
0000124A  2614                     170  NOPETC MOVE.L (A4),D3
0000124C  E19B                     171         ROL.L #8,D3
0000124E  B63C 0046                172         CMP.B #$46,D3
00001252  6700 0012                173         BEQ NOT
00001256  2614                     174         MOVE.L (A4),D3
00001258  0803 0007                175         BTST.L #7,D3
0000125C  6600 0016                176         BNE LEA
00001260  0503                     177         BTST.L D2,D3
00001262  6792                     178         BEQ BAD
00001264  4E75                     179         RTS
00001266                           180         
00001266  43F9 00001478            181  NOT    LEA NT,A1
0000126C  103C 000E                182         MOVE.B #14,D0
00001270  4E4F                     183         TRAP #15
00001272  4E75                     184         RTS     
00001274                           185  
00001274  43F9 000014AA            186  LEA    LEA LA,A1
0000127A  103C 000E                187         MOVE.B #14,D0
0000127E  4E4F                     188         TRAP #15
00001280  4E75                     189         RTS       
00001282                           190         
00001282  43F9 0000147C            191  ADDQ   LEA AQ,A1
00001288  103C 000E                192         MOVE.B #14,D0
0000128C  4E4F                     193         TRAP #15
0000128E  4E75                     194         RTS
00001290                           195  
00001290  43F9 00001482            196  AND    LEA AN,A1
00001296  103C 000E                197         MOVE.B #14,D0
0000129A  4E4F                     198         TRAP #15
0000129C  4E75                     199         RTS
0000129E                           200         
0000129E  43F9 00001487            201  ADD    LEA AD,A1
000012A4  103C 000E                202         MOVE.B #14,D0
000012A8  4E4F                     203         TRAP #15
000012AA  4E75                     204         RTS
000012AC                           205  
000012AC  43F9 0000148C            206  BRA   LEA BR,A1
000012B2  103C 000E                207        MOVE.B #14,D0
000012B6  4E4F                     208        TRAP #15
000012B8  4E75                     209        RTS
000012BA                           210  
000012BA  43F9 00001491            211  BEQ   LEA BE,A1
000012C0  103C 000E                212         MOVE.B #14,D0
000012C4  4E4F                     213         TRAP #15
000012C6  4E75                     214         RTS
000012C8                           215         
000012C8  43F9 00001496            216  BGT   LEA BG,A1
000012CE  103C 000E                217         MOVE.B #14,D0
000012D2  4E4F                     218         TRAP #15
000012D4  4E75                     219         RTS
000012D6                           220         
000012D6  43F9 0000149B            221  BLE   LEA BL,A1
000012DC  103C 000E                222         MOVE.B #14,D0
000012E0  4E4F                     223         TRAP #15
000012E2  4E75                     224         RTS
000012E4                           225         
000012E4  43F9 000014A0            226  ASR   LEA AR,A1
000012EA  103C 000E                227         MOVE.B #14,D0
000012EE  4E4F                     228         TRAP #15
000012F0  4E75                     229         RTS
000012F2                           230         
000012F2  43F9 000014A5            231  ASL   LEA AL,A1
000012F8  103C 000E                232         MOVE.B #14,D0
000012FC  4E4F                     233         TRAP #15
000012FE  4E75                     234         RTS
00001300                           235         
00001300  43F9 000014AF            236  LSR   LEA LR,A1
00001306  103C 000E                237         MOVE.B #14,D0
0000130A  4E4F                     238         TRAP #15
0000130C  4E75                     239         RTS
0000130E                           240         
0000130E  43F9 000014B4            241  LSL   LEA LL,A1
00001314  103C 000E                242         MOVE.B #14,D0
00001318  4E4F                     243         TRAP #15
0000131A  4E75                     244         RTS
0000131C                           245         
0000131C  43F9 000014B9            246  ROR   LEA RR,A1
00001322  103C 000E                247         MOVE.B #14,D0
00001326  4E4F                     248         TRAP #15
00001328  4E75                     249         RTS
0000132A                           250         
0000132A  43F9 000014BE            251  ROL   LEA RL,A1
00001330  103C 000E                252         MOVE.B #14,D0
00001334  4E4F                     253         TRAP #15
00001336  4E75                     254         RTS
00001338                           255  
00001338                           256  TESTBIT
00001338  3614                     257      MOVE.W (A4),D3
0000133A  220D                     258      MOVE.L A5,D1
0000133C  92B9 00001370            259      SUB.L TREE,D1
00001342  E381                     260      ASL.L #1,D1
00001344  2A41                     261      MOVEA.L D1,A5
00001346  0503                     262      BTST.L D2,D3
00001348  6700 0006                263      BEQ IS_ZERO
0000134C  6000 0012                264      BRA NOT_ZERO
00001350                           265      
00001350                           266  IS_ZERO   * if bit D2 of (A4) is zero (go left on tree)
00001350  5342                     267      SUBQ #1,D2
00001352  584D                     268      ADDA.W #4,A5
00001354  DBF9 00001370            269      ADDA.L TREE,A5
0000135A  2255                     270      MOVEA.L (A5),A1
0000135C  4E91                     271      JSR (A1)
0000135E  4E75                     272      RTS
00001360                           273  
00001360                           274  NOT_ZERO  * if bit D2 of (A4) is one (go right on tree)
00001360  5342                     275      SUBQ #1,D2
00001362  504D                     276      ADDA.W #8,A5
00001364  DBF9 00001370            277      ADDA.L TREE,A5
0000136A  2255                     278      MOVEA.L (A5),A1
0000136C  4E91                     279      JSR (A1)
0000136E  4E75                     280      RTS
00001370                           281      
00001370                           282  * var storage
00001370= 00007000                 283  TREE DC.L $7000    
00001374                           284  * string storage
00001374  =0000000D                285  CR EQU $0D
00001374  =00000009                286  LF EQU $09
00001374= 50 6C 65 61 73 65 ...    287  PROMPT1  DC.B  'Please enter the memory value of the start of the program: ',0
000013B0= 50 6C 65 61 73 65 ...    288  PROMPT2  DC.B  'Please enter the memory value of the end of the program: ',0
000013EA= 54 68 65 20 70 72 ...    289  UNDEFINED DC.B 'The program should never reach this state.',0
00001415= 54 68 65 20 64 61 ...    290  BADDATA  DC.B 'The data on line ____ is not a valid opcode.',CR,LF,0
00001444= 4D 4F 56 45 51 20 00     291  MQ DC.B 'MOVEQ ',0
0000144B= 4D 4F 56 45 2E 42 ...    292  MB  DC.B 'MOVE.B ',0
00001453= 4D 4F 56 45 2E 4C ...    293  ML  DC.B 'MOVE.L/MOVEA.L ',0
00001463= 4D 4F 56 45 2E 57 ...    294  MW  DC.B 'MOVE.W/MOVEA.W ',0
00001473= 4E 4F 50 20 00           295  NP DC.B 'NOP ',0
00001478= 4E 4F 54 00              296  NT DC.B 'NOT',0
0000147C= 41 44 44 51 20 00        297  AQ DC.B 'ADDQ ',0
00001482= 41 4E 44 20 00           298  AN DC.B 'AND ',0
00001487= 41 44 44 20 00           299  AD DC.B 'ADD ',0
0000148C= 42 52 41 20 00           300  BR DC.B 'BRA ',0
00001491= 42 45 51 20 00           301  BE DC.B 'BEQ ',0
00001496= 42 47 54 20 00           302  BG DC.B 'BGT ',0
0000149B= 42 4C 45 20 00           303  BL DC.B 'BLE ',0
000014A0= 41 53 52 20 00           304  AR DC.B 'ASR ',0
000014A5= 41 53 4C 20 00           305  AL DC.B 'ASL ',0
000014AA= 4C 45 41 20 00           306  LA DC.B 'LEA ',0
000014AF= 4C 53 52 20 00           307  LR DC.B 'LSR ',0
000014B4= 4C 53 4C 20 00           308  LL DC.B 'LSL ',0
000014B9= 52 4F 52 20 00           309  RR DC.B 'ROR ',0
000014BE= 52 4F 4C 20 00           310  RL DC.B 'ROL ',0
000014C3= 53 55 42 20 00           311  SB DC.B 'SUB ',0
000014C8                           312  
000014C8                           313      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AD                  1487
ADD                 129E
ADDQ                1282
AL                  14A5
AN                  1482
AND                 1290
AQ                  147C
AR                  14A0
ASL                 12F2
ASR                 12E4
BAD                 11F6
BADDATA             1415
BE                  1491
BEQ                 12BA
BG                  1496
BGT                 12C8
BL                  149B
BLDLOOP             105E
BLE                 12D6
BR                  148C
BRA                 12AC
BUILDTREE           1054
CR                  D
DECODE_OP           11D8
DONE                1024
IS_ZERO             1350
LA                  14AA
LEA                 1274
LF                  9
LL                  14B4
LR                  14AF
LSL                 130E
LSR                 1300
MB                  144B
ML                  1453
MOVEB               1204
MOVEL               1220
MOVEQ               1212
MOVEW               122E
MQ                  1444
MW                  1463
NEXTLINE            1014
NOPETC              124A
NOT                 1266
NOT_ZERO            1360
NP                  1473
NT                  1478
PROMPT1             1374
PROMPT2             13B0
RL                  14BE
ROL                 132A
ROR                 131C
RR                  14B9
SB                  14C3
START               1000
SUB                 123C
TESTBIT             1338
TREE                1370
UNDEF               11E8
UNDEFINED           13EA
WELCOME             102A
