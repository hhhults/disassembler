00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/29/2022 1:26:04 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : motorola 68k disassembler prototype
00000000                             3  * Written by : Harper Hults
00000000                             4  * Date       : 5/25/22
00000000                             5  * Description: allows for decoding of MOVEB and MOVEQ opcodes.
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:
00001000                             9      *JSR WELCOME
00001000  247C 00005000             10      MOVEA.L #$5000,A2    * for testing
00001006  267C 0000500E             11      MOVEA.L #$500E,A3
0000100C  2A7C 00000500             12      MOVEA.L #$00000500,A5
00001012  284A                      13      MOVEA.L  A2,A4      * does this need to be W depending on where in mem start is?
00001014  4EB9 00001206             14      JSR BUILD_EA_TREE
0000101A  4EB9 00001072             15      JSR BUILDTREE
00001020                            16      
00001020                            17      
00001020  4EB9 000011F6             18  NEXTLINE JSR DECODE_OP
00001026  B7CC                      19           CMP.L A4,A3
00001028  6F00 0010                 20           BLE DONE
0000102C  43F9 000818DF             21           LEA     NXT_LINE,A1
00001032  303C 000D                 22           MOVE    #13,D0
00001036  4E4F                      23           TRAP    #15
00001038  60E6                      24           BRA NEXTLINE
0000103A                            25  
0000103A                            26  
0000103A                            27  DONE                * end program
0000103A  103C 0009                 28      MOVE.B  #9,D0
0000103E  4E4F                      29      TRAP    #15
00001040                            30      
00001040                            31  WELCOME
00001040  43F9 00081761             32      LEA PROMPT1,A1  * get start memory value, put in A2
00001046  103C 000E                 33      MOVE.B #14,D0
0000104A  4E4F                      34      TRAP #15
0000104C                            35      
0000104C  4EB9 0000172E             36      JSR GETINPUT
00001052  23C3 00001766             37      MOVE.L D3,BEGIN
00001058                            38      
00001058  43F9 0008179D             39      LEA PROMPT2,A1  * get end memory value, put in D3
0000105E  103C 000E                 40      MOVE.B #14,D0
00001062  4E4F                      41      TRAP #15
00001064                            42      
00001064  4EB9 0000172E             43      JSR GETINPUT
0000106A  23C3 00041762             44      MOVE.L D3,END
00001070  4E75                      45      RTS
00001072                            46      
00001072                            47  BUILDTREE
00001072  303C 0000                 48          MOVE.W #0,D0
00001076  2279 0000175E             49          MOVEA.L TREE,A1
0000107C  22FC 000014DC             50  BLDLOOP MOVE.L #UNDEF,(A1)+    * initialize whole tree to undefined
00001082  5240                      51          ADDQ #1,D0
00001084  B07C 0201                 52          CMP.W #513,D0
00001088  66F2                      53          BNE BLDLOOP
0000108A                            54          
0000108A  2279 0000175E             55          MOVEA.L TREE,A1
00001090                            56  
00001090  22FC 000016F6             57          MOVE.L #TESTBIT,(A1)+  * nodes 0 - 11 are decision nodes
00001096  22FC 000016F6             58          MOVE.L #TESTBIT,(A1)+
0000109C  22FC 000016F6             59          MOVE.L #TESTBIT,(A1)+
000010A2  22FC 000016F6             60          MOVE.L #TESTBIT,(A1)+
000010A8  22FC 000016F6             61          MOVE.L #TESTBIT,(A1)+
000010AE  22FC 000016F6             62          MOVE.L #TESTBIT,(A1)+
000010B4  22FC 000016F6             63          MOVE.L #TESTBIT,(A1)+
000010BA  22FC 000016F6             64          MOVE.L #TESTBIT,(A1)+
000010C0  22FC 000016F6             65          MOVE.L #TESTBIT,(A1)+
000010C6  22FC 000016F6             66          MOVE.L #TESTBIT,(A1)+
000010CC  22FC 000016F6             67          MOVE.L #TESTBIT,(A1)+
000010D2  22FC 000016F6             68          MOVE.L #TESTBIT,(A1)+
000010D8  22FC 000014EA             69          MOVE.L #BAD,(A1)+      * node 12 is an invalid code
000010DE  22FC 000016F6             70          MOVE.L #TESTBIT,(A1)+  * nodes 13&14 are decision nodes
000010E4  22FC 000016F6             71          MOVE.L #TESTBIT,(A1)+
000010EA  22FC 000014EA             72          MOVE.L #BAD,(A1)+      * node 15 is an invalid node
000010F0  22FC 000014F8             73          MOVE.L #MOVEB,(A1)+    * put MOVE.B at node 16
000010F6  22FC 00001528             74          MOVE.L #MOVEL,(A1)+    * MOVE.L/MOVEA.L goes at node 17
000010FC  22FC 00001558             75          MOVE.L #MOVEW,(A1)+    * MOVE.W/MOVEA.W goes at 18
00001102  22FC 0000159E             76          MOVE.L #NOPETC,(A1)+   * NOP et al. subroutine goes at 19
00001108  22FC 00001638             77          MOVE.L #ADDQ,(A1)+     * ADDQ goes at 20
0000110E  22FC 000016F6             78          MOVE.L #TESTBIT,(A1)+  * 21 is a decision node
00001114  22FC 0000150E             79          MOVE.L #MOVEQ,(A1)+    * MOVEQ goes at 22
0000111A  22FC 000014EA             80          MOVE.L #BAD,(A1)+      * 23 is invalid code
00001120  22FC 00001588             81          MOVE.L #SUB,(A1)+      * 24 is SUB
00001126                            82          
00001126  5049                      83          ADDA.W #8,A1           * should put us at TREE + $6C
00001128  22FC 00001646             84          MOVE.L #AND,(A1)+      * node 27 is AND
0000112E  22FC 00001654             85          MOVE.L #ADD,(A1)+      * node 28 is ADD
00001134  22FC 000016F6             86          MOVE.L #TESTBIT,(A1)+  * 29 is a decision node
0000113A  22FC 000014EA             87          MOVE.L #BAD,(A1)+      * 30 is invalid code, puts us at TREE + $7C
00001140                            88          
00001140  D2FC 0030                 89          ADDA.W #$30,A1         * go to TREE + $AC which is node 43
00001144  22FC 000016F6             90          MOVE.L #TESTBIT,(A1)+  * 43 is decision node
0000114A  22BC 000016F6             91          MOVE.L #TESTBIT,(A1)   * 44 is decision node, should be B0
00001150                            92          
00001150  D2FC 003C                 93          ADDA.W #$3C,A1         * should put us at TREE + $EC
00001154  22FC 000016F6             94          MOVE.L #TESTBIT,(A1)+  * node 59 is decision
0000115A  22BC 000014EA             95          MOVE.L #BAD,(A1)       * node 60 is invalid code
00001160                            96          
00001160  D2FC 006C                 97          ADDA.W #$6C,A1         * should put us at TREE + $15C
00001164  22FC 0000166A             98          MOVE.L #BRA,(A1)+      * node 87 is BRA
0000116A  22FC 00001678             99          MOVE.L #BEQ,(A1)+      * node 88 is BEQ
00001170  22FC 000014EA            100          MOVE.L #BAD,(A1)+      * node 89 is an invalid code
00001176  22BC 000016F6            101          MOVE.L #TESTBIT,(A1)   * node 90 is a decision node
0000117C                           102          
0000117C  D2FC 0074                103          ADDA.W #$74,A1         * should put us at TREE + $DC?
00001180  22FC 000016F6            104          MOVE.L #TESTBIT,(A1)+  * nodes 119,120 are decision nodes
00001186  22BC 000016F6            105          MOVE.L #TESTBIT,(A1)   * A1= TREE + $1E0?
0000118C                           106          
0000118C  D2FC 00F4                107          ADDA.W #$F4,A1         * puts us at TREE + $2D4?
00001190  22FC 000014EA            108          MOVE.L #BAD,(A1)+      * node 181 is an invalid code
00001196  22BC 000016F6            109          MOVE.L #TESTBIT,(A1)   * node 182 is a decision node
0000119C                           110          
0000119C  D2FC 00E4                111          ADDA.W #$E4,A1
000011A0  22FC 000016F6            112          MOVE.L #TESTBIT,(A1)+  * node 239 is a deicsion node
000011A6  22FC 000016F6            113          MOVE.L #TESTBIT,(A1)+  * node 240 is a deicsion node
000011AC  22FC 000014EA            114          MOVE.L #BAD,(A1)+      * node 241 is an invalid code
000011B2  22BC 000016F6            115          MOVE.L #TESTBIT,(A1)   * node 242 is a deicsion node
000011B8                           116          
000011B8  D2FC 01EC                117          ADDA.W #$1EC,A1
000011BC  22FC 00001686            118          MOVE.L #BGT,(A1)+      * node 365 is BGT
000011C2  22BC 00001694            119          MOVE.L #BLE,(A1)       * node 366 is BLE
000011C8                           120          
000011C8  D2FC 01C4                121          ADDA.W #$1C4,A1
000011CC  22FC 000016A2            122          MOVE.L #ASR,(A1)+      * node 479 is ASR
000011D2  22FC 000016B0            123          MOVE.L #ASL,(A1)+      * node 480 is ASL
000011D8  22FC 000016BE            124          MOVE.L #LSR,(A1)+      * node 481 is LSR
000011DE  22BC 000016CC            125          MOVE.L #LSL,(A1)       * node 482 is LSL
000011E4                           126          
000011E4  D2FC 000C                127          ADDA.W #$C,A1
000011E8  22FC 000016DA            128          MOVE.L #ROR,(A1)+      * node 485 is ROR
000011EE  22BC 000016E8            129          MOVE.L #ROL,(A1)       * node 486 is ROL
000011F4                           130          
000011F4  4E75                     131          RTS
000011F6                           132      
000011F6  143C 000F                133  DECODE_OP MOVE.B #$F,D2 * decodes the opcode at A4
000011FA  2A79 0000175E            134            MOVEA.L TREE,A5
00001200  2255                     135            MOVEA.L (A5),A1
00001202  4E91                     136            JSR (A1)
00001204  4E75                     137            RTS    
00001206                           138  *-----------------------------------------------------------
00001206                           139  *EA STUFF STARTS HERE
00001206                           140  *-----------------------------------------------------------
00001206                           141  BUILD_EA_TREE   ;BUILDS THE BINARY EA TREE FOR COMPARISONS
00001206                           142              ;ALL THE REGISTERS ADDED TO ARRAY
00001206  2AFC 000013AA            143              MOVE.L  #M_DR,(A5)+
0000120C  2AFC 000013BE            144              MOVE.L  #M_AR,(A5)+
00001212  2AFC 000013D2            145              MOVE.L  #M_DIR_A,(A5)+
00001218  2AFC 000013F8            146              MOVE.L  #M_API,(A5)+
0000121E  2AFC 00001430            147              MOVE.L  #M_APD,(A5)+
00001224                           148              ;ABSOLUTE AND IMMEDIATE ADDED TO ARRAY           
00001224  2AFC 000014C6            149              MOVE.L  #M_AWA,(A5)+
0000122A  2AFC 000014B0            150              MOVE.L  #M_ALA,(A5)+
00001230  2AFC 00000000            151              MOVE.L  #$00000000,(A5)+
00001236  2AFC 00001468            152              MOVE.L  #M_IA,(A5)+
0000123C  4E75                     153              RTS            
0000123E                           154  *-----------------------------------------------------------          
0000123E                           155  CHK_EA_SOURCE     ;COMPARES A SOURCE MODE FROM THE OPCODE TO THE EA TREE
0000123E                           156      
0000123E  4286                     157              CLR.L   D6
00001240  2C0C                     158              MOVE.L  A4,D6
00001242  5446                     159              ADDQ    #$2,D6
00001244  2846                     160              MOVEA.L D6,A4
00001246                           161              
00001246  43F9 000818DD            162              LEA     P_SPACE,A1
0000124C  303C 000E                163              MOVE    #14,D0
00001250  4E4F                     164              TRAP    #15   
00001252                           165                 
00001252  4285                     166              CLR.L   D5
00001254  3A03                     167              MOVE.W  D3,D5 
00001256  0245 0038                168              ANDI.W  #$0038,D5
0000125A  E64D                     169              LSR.W   #$3,D5
0000125C                           170              
0000125C  4286                     171              CLR.L   D6
0000125E  BA3C 0007                172              CMP.B   #$7,D5
00001262  6700 0104                173              BEQ     IS_ABS_IMM            
00001266                           174              
00001266  CAFC 0004                175              MULU.W  #$4,D5
0000126A  DAB9 00001762            176              ADD.L   EA_TREE,D5
00001270  2A45                     177              MOVEA.L D5,A5
00001272                           178             
00001272  4281                     179              CLR.L   D1
00001274  3203                     180              MOVE.W  D3,D1 
00001276  0241 0007                181              ANDI.W  #$0007,D1
0000127A                           182                          
0000127A  2C55                     183              MOVEA.L (A5),A6
0000127C  4E96                     184              JSR     (A6)    
0000127E                           185              
0000127E  43F9 000818DB            186              LEA     P_COMMA,A1
00001284  303C 000E                187              MOVE    #14,D0
00001288  4E4F                     188              TRAP    #15
0000128A                           189              
0000128A  4285                     190              CLR.L   D5
0000128C                           191  
0000128C  4E75                     192              RTS
0000128E                           193  *-----------------------------------------------------------
0000128E                           194  CHK_EA_DEST       ;COMPARES A DESTINATION MODE FROM THE OPCODE TO THE EA TREE
0000128E                           195  
0000128E  4285                     196              CLR.L   D5
00001290  4286                     197              CLR.L   D6
00001292  3A03                     198              MOVE.W  D3,D5 
00001294  0245 01C0                199              ANDI.W  #$01C0,D5
00001298  EC4D                     200              LSR.W   #$6,D5
0000129A                           201              
0000129A  1C3C 0009                202              MOVE.B  #9,D6
0000129E  BA3C 0007                203              CMP.B   #$7,D5
000012A2  6700 00C4                204              BEQ     IS_ABS_IMM            
000012A6                           205              
000012A6  CAFC 0004                206              MULU.W  #$4,D5
000012AA  DAB9 00001762            207              ADD.L   EA_TREE,D5
000012B0  2A45                     208              MOVEA.L D5,A5
000012B2                           209              
000012B2  4281                     210              CLR.L   D1
000012B4  3203                     211              MOVE.W  D3,D1 
000012B6  0241 0E00                212              ANDI.W  #$0E00,D1
000012BA  EF59                     213              ROL.W   #$7,D1
000012BC                           214           
000012BC  2C55                     215              MOVEA.L (A5),A6
000012BE  4E96                     216              JSR     (A6)
000012C0                           217              
000012C0  4E75                     218              RTS
000012C2                           219  *-----------------------------------------------------------            
000012C2                           220  MATH_DEST_CHK
000012C2  4285                     221              CLR.L   D5
000012C4  4286                     222              CLR.L   D6
000012C6  3A03                     223              MOVE.W  D3,D5
000012C8                           224              
000012C8                           225  *-----------------------------------------------------------            
000012C8                           226  LOGIC_SIZE_CHK      ;CHECKS AND PRINTS SIZE (.L/.W/.B) FOR ADD/AND/SUB/ADDA/OR
000012C8  4285                     227              CLR.L   D5
000012CA  3A03                     228              MOVE.W  D3,D5
000012CC  0245 00C0                229              ANDI.W  #$00C0,D5
000012D0  EC4D                     230              LSR.W   #$06,D5 
000012D2                           231              
000012D2  BA7C 0000                232              CMP     #00,D5
000012D6  6700 001E                233              BEQ     LOGIC_BYTE            
000012DA  BA7C 0001                234              CMP     #01,D5
000012DE  6700 0032                235              BEQ     LOGIC_WORD           
000012E2  BA7C 0002                236              CMP     #02,D5
000012E6  6700 0046                237              BEQ     LOGIC_LONG  
000012EA  BA7C 0003                238              CMP     #03,D5
000012EE  6700 0056                239              BEQ     LOGIC_A          
000012F2  6000 0066                240              BRA     LOGIC_DONE
000012F6                           241  LOGIC_BYTE  ;IF THE INSTRICTION IS BYTE SIZED
000012F6  43F9 000818CB            242              LEA     P_PERIOD,A1
000012FC  103C 000E                243              MOVE.B  #14,D0
00001300  4E4F                     244              TRAP    #15            
00001302  43F9 000818C5            245              LEA     P_B,A1
00001308  103C 000E                246              MOVE.B  #14,D0
0000130C  4E4F                     247              TRAP    #15            
0000130E  6000 004A                248              BRA     LOGIC_DONE
00001312                           249  LOGIC_WORD  ;IF THE INSTRICTION IS WORD SIZED
00001312  43F9 000818CB            250              LEA     P_PERIOD,A1
00001318  103C 000E                251              MOVE.B  #14,D0
0000131C  4E4F                     252              TRAP    #15            
0000131E  43F9 000818C7            253              LEA     P_W,A1
00001324  103C 000E                254              MOVE.B  #14,D0
00001328  4E4F                     255              TRAP    #15            
0000132A  6000 002E                256              BRA     LOGIC_DONE
0000132E                           257  LOGIC_LONG    ;IF THE INSTRICTION IS LONG-WORD SIZED
0000132E  43F9 000818CB            258              LEA     P_PERIOD,A1
00001334  103C 000E                259              MOVE.B  #14,D0
00001338  4E4F                     260              TRAP    #15            
0000133A  43F9 000818C9            261              LEA     P_L,A1
00001340  103C 000E                262              MOVE.B  #14,D0
00001344  4E4F                     263              TRAP    #15  
00001346                           264  LOGIC_A     ;IF THE INSTRUCTION IS ADDA, PRINTS THE A
00001346  43F9 000818C3            265              LEA     P_A,A1
0000134C  103C 000E                266              MOVE.B  #14,D0
00001350  4E4F                     267              TRAP    #15                        
00001352  0805 0008                268              BTST    #$8,D5
00001356  67BA                     269              BEQ     LOGIC_WORD
00001358  60D4                     270              BRA     LOGIC_LONG                                 
0000135A                           271  LOGIC_DONE
0000135A  43F9 000818DD            272              LEA     P_SPACE,A1
00001360  303C 000E                273              MOVE    #14,D0
00001364  4E4F                     274              TRAP    #15 
00001366  4E75                     275              RTS                 
00001368                           276  *-----------------------------------------------------------
00001368                           277  IS_ABS_IMM      ;COMPARES REGISTER NUMBER FOR ABSOLUTES AND IMMEDIATES FOR PRINTING
00001368  BC7C 0009                278              CMP     #9,D6
0000136C  6700 000C                279              BEQ     IS_DEST
00001370                           280              
00001370  3A03                     281              MOVE.W  D3,D5
00001372  0245 0007                282              ANDI.W  #$0007,D5
00001376  6000 000A                283              BRA     IS_SOURCE                        
0000137A                           284  IS_DEST                        
0000137A  3A03                     285              MOVE.W  D3,D5
0000137C  0245 0E00                286              ANDI.W  #$0E00,D5
00001380  EF5D                     287              ROL.W   #$07,D5
00001382                           288  IS_SOURCE
00001382  5845                     289              ADDQ    #$4,D5
00001384  CAFC 0004                290              MULU.W  #$04,D5
00001388  DAB9 00001762            291              ADD.L   EA_TREE,D5
0000138E                           292              
0000138E  2A45                     293              MOVEA.L D5,A5
00001390  2C55                     294              MOVEA.L (A5),A6
00001392  4E96                     295              JSR     (A6)
00001394                           296              
00001394  BC7C 0009                297              CMP     #9,D6
00001398  6700 0282                298              BEQ     RTS
0000139C                           299              
0000139C  43F9 000818DB            300              LEA     P_COMMA,A1
000013A2  303C 000E                301              MOVE    #14,D0
000013A6  4E4F                     302              TRAP    #15
000013A8                           303              
000013A8  4E75                     304              RTS
000013AA                           305  *-----------------------------------------------------------    
000013AA                           306  M_DR    ;IF MODE IS A DATA REGISTER Dn
000013AA                           307              
000013AA  43F9 000818C1            308              LEA     P_D,A1
000013B0  103C 000E                309              MOVE.B  #14,D0    
000013B4  4E4F                     310              TRAP    #15
000013B6                           311      
000013B6  103C 0003                312              MOVE.B  #3,D0
000013BA  4E4F                     313              TRAP    #15 
000013BC                           314              
000013BC  4E75                     315              RTS
000013BE                           316  *-----------------------------------------------------------            
000013BE                           317  M_AR    ;IF MODE IS AN ADDRESS REGISTER An
000013BE                           318  
000013BE  43F9 000818C3            319              LEA     P_A,A1
000013C4  103C 000E                320              MOVE.B  #14,D0    
000013C8  4E4F                     321              TRAP    #15  
000013CA                           322  
000013CA  103C 0003                323              MOVE.B  #3,D0
000013CE  4E4F                     324              TRAP    #15  
000013D0                           325              
000013D0  4E75                     326              RTS
000013D2                           327  *-----------------------------------------------------------
000013D2                           328  M_DIR_A ;IF MODE IS A DIRECT ADDRESS (An)
000013D2                           329  
000013D2  43F9 000818CD            330              LEA     P_OPEN_PAR,A1
000013D8  103C 000E                331              MOVE.B  #14,D0    
000013DC  4E4F                     332              TRAP    #15 
000013DE                           333              
000013DE  43F9 000818C3            334              LEA     P_A,A1
000013E4  103C 000E                335              MOVE.B  #14,D0    
000013E8  4E4F                     336              TRAP    #15
000013EA                           337              
000013EA  43F9 000818CF            338              LEA     P_CLOSE_PAR,A1
000013F0  103C 000E                339              MOVE.B  #14,D0    
000013F4  4E4F                     340              TRAP    #15
000013F6                           341              
000013F6  4E75                     342              RTS  
000013F8                           343  *-----------------------------------------------------------
000013F8                           344  M_API   ;IF MODE IS AN ADDRESS WITH POSTINCREMENT (An)+
000013F8                           345  
000013F8  43F9 000818CD            346              LEA     P_OPEN_PAR,A1
000013FE  103C 000E                347              MOVE.B  #14,D0    
00001402  4E4F                     348              TRAP    #15 
00001404                           349              
00001404  43F9 000818C3            350              LEA     P_A,A1
0000140A  103C 000E                351              MOVE.B  #14,D0    
0000140E  4E4F                     352              TRAP    #15
00001410                           353              
00001410  103C 0003                354              MOVE.B  #3,D0
00001414  4E4F                     355              TRAP    #15 
00001416                           356              
00001416  43F9 000818CF            357              LEA     P_CLOSE_PAR,A1
0000141C  103C 000E                358              MOVE.B  #14,D0    
00001420  4E4F                     359              TRAP    #15
00001422                           360              
00001422  43F9 000818D1            361              LEA     P_PLUS,A1
00001428  103C 000E                362              MOVE.B  #14,D0    
0000142C  4E4F                     363              TRAP    #15
0000142E                           364              
0000142E  4E75                     365              RTS  
00001430                           366  *-----------------------------------------------------------
00001430                           367  M_APD   ;IF MODE IS AN ADDRESS WITH PREDECREMENT -(An)
00001430                           368  
00001430  43F9 000818D3            369              LEA     P_MINUS,A1
00001436  103C 000E                370              MOVE.B  #14,D0    
0000143A  4E4F                     371              TRAP    #15
0000143C                           372  
0000143C  43F9 000818CD            373              LEA     P_OPEN_PAR,A1
00001442  103C 000E                374              MOVE.B  #14,D0    
00001446  4E4F                     375              TRAP    #15 
00001448                           376              
00001448  43F9 000818C3            377              LEA     P_A,A1
0000144E  103C 000E                378              MOVE.B  #14,D0    
00001452  4E4F                     379              TRAP    #15
00001454                           380              
00001454  103C 0003                381              MOVE.B  #3,D0
00001458  4E4F                     382              TRAP    #15 
0000145A                           383              
0000145A  43F9 000818CF            384              LEA     P_CLOSE_PAR,A1
00001460  103C 000E                385              MOVE.B  #14,D0    
00001464  4E4F                     386              TRAP    #15
00001466                           387              
00001466  4E75                     388              RTS  
00001468                           389  *-----------------------------------------------------------
00001468                           390  M_IA    ;IF MODE IS IMMIDIATE ADDRESSING #IMM
00001468                           391  
00001468  43F9 000818D5            392              LEA     P_HASH,A1
0000146E  103C 000E                393              MOVE.B  #14,D0    
00001472  4E4F                     394              TRAP    #15 
00001474                           395              
00001474  43F9 000818D7            396              LEA     P_HEX,A1
0000147A  103C 000E                397              MOVE.B  #14,D0    
0000147E  4E4F                     398              TRAP    #15
00001480                           399              
00001480  4284                     400              CLR.L   D4
00001482  3803                     401              MOVE.W  D3,D4
00001484  0244 3000                402              ANDI.W  #$3000,D4
00001488  E95C                     403              ROL.W   #$04,D4            
0000148A                           404              
0000148A  B87C 0003                405              CMP     #$3,D4
0000148E  6700 0016                406              BEQ     IA_WORD
00001492                           407              
00001492  B87C 0002                408              CMP     #2,D4
00001496  6700 0004                409              BEQ     IA_LONG
0000149A                           410              
0000149A  4E75                     411  IA_END      RTS
0000149C                           412              
0000149C                           413  IA_LONG
0000149C  221C                     414              MOVE.L  (A4)+,D1
0000149E  103C 0003                415              MOVE.B  #3,D0
000014A2  4E4F                     416              TRAP    #15
000014A4  60F4                     417              BRA     IA_END
000014A6                           418              
000014A6                           419  IA_WORD
000014A6  321C                     420              MOVE.W  (A4)+,D1
000014A8  103C 0003                421              MOVE.B  #3,D0
000014AC  4E4F                     422              TRAP    #15  
000014AE  60EA                     423              BRA     IA_END          
000014B0                           424  *-----------------------------------------------------------
000014B0                           425  M_ALA   ;IF MODE IS AN ABSOLUTE LONG ADDRESS (xxx).L
000014B0                           426  
000014B0  43F9 000818D7            427              LEA     P_HEX,A1
000014B6  103C 000E                428              MOVE.B  #14,D0    
000014BA  4E4F                     429              TRAP    #15 
000014BC                           430              
000014BC  221C                     431              MOVE.L  (A4)+,D1
000014BE  103C 0003                432              MOVE.B  #3,D0
000014C2  4E4F                     433              TRAP    #15
000014C4                           434  
000014C4  4E75                     435              RTS  
000014C6                           436  *-----------------------------------------------------------
000014C6                           437  M_AWA   ;IF MODE IS AN ABSOLUTE WORD ADDRESS (xxx).W
000014C6                           438  
000014C6  43F9 000818D7            439              LEA     P_HEX,A1
000014CC  103C 000E                440              MOVE.B  #14,D0    
000014D0  4E4F                     441              TRAP    #15 
000014D2                           442              
000014D2  321C                     443              MOVE.W  (A4)+,D1
000014D4  103C 0003                444              MOVE.B  #3,D0
000014D8  4E4F                     445              TRAP    #15
000014DA                           446  
000014DA  4E75                     447              RTS            
000014DC                           448  *----------------------------------------------------------- 
000014DC  43F9 000817D7            449  UNDEF LEA UNDEFINED,A1
000014E2  103C 000E                450        MOVE.B #14,D0
000014E6  4E4F                     451        TRAP #15
000014E8  4E75                     452        RTS 
000014EA                           453        
000014EA  43F9 00081802            454  BAD   LEA BADDATA,A1
000014F0  103C 000E                455        MOVE.B #14,D0
000014F4  4E4F                     456        TRAP #15
000014F6  4E75                     457        RTS
000014F8                           458        
000014F8  43F9 00081838            459  MOVEB  LEA MB,A1
000014FE  103C 000E                460         MOVE.B #14,D0
00001502  4E4F                     461         TRAP #15
00001504                           462         
00001504  4EB8 123E                463         JSR   CHK_EA_SOURCE
00001508  4EB8 128E                464         JSR   CHK_EA_DEST
0000150C                           465         
0000150C  4E75                     466         RTS 
0000150E                           467        
0000150E  43F9 00081831            468  MOVEQ LEA MQ,A1     ;CHANGE OPCODE SOURCE ANANLYSIS CODE*************************
00001514  103C 000E                469        MOVE.B #14,D0
00001518  4E4F                     470        TRAP #15
0000151A                           471         
0000151A  4285                     472        CLR.L     D5
0000151C  3A03                     473        MOVE.W    D3,D5
0000151E  0645 000F                474        ADDI.W    #$0F,D5
00001522                           475        
00001522  4EB8 128E                476        JSR       CHK_EA_DEST
00001526                           477         
00001526  4E75                     478        RTS
00001528                           479         
00001528                           480  MOVEL 
00001528  2614                     481        MOVE.L (A4),D3
0000152A  E19B                     482        ROL.L #8,D3
0000152C  E59B                     483        ROL.L #2,D3
0000152E  0203 0007                484        ANDI.B #$07,D3
00001532  B63C 0001                485        CMP.B #1,D3
00001536  6700 0018                486        BEQ MOVEAL
0000153A                           487        
0000153A  43F9 00081852            488        LEA ML,A1         ;FIGURE OUT HOW TO DEAL WITH THE MOVEQ BUG *****************
00001540                           489  BREAK      
00001540  103C 000E                490        MOVE.B #14,D0
00001544  4E4F                     491        TRAP #15
00001546                           492        
00001546  4EB8 123E                493        JSR   CHK_EA_SOURCE
0000154A  4EB8 128E                494        JSR   CHK_EA_DEST
0000154E                           495        
0000154E  4E75                     496        RTS
00001550                           497        
00001550  43F9 00081840            498  MOVEAL LEA MAL,A1
00001556  60E8                     499         BRA BREAK
00001558                           500        
00001558                           501  MOVEW 
00001558  2614                     502        MOVE.L (A4),D3
0000155A  E19B                     503        ROL.L #8,D3
0000155C  E59B                     504        ROL.L #2,D3
0000155E  0203 0007                505        ANDI.B #$07,D3
00001562  B63C 0001                506        CMP.B #1,D3
00001566  6700 0018                507        BEQ MOVEAW
0000156A                           508        
0000156A  43F9 0008185A            509        LEA MW,A1
00001570                           510  BREAK2
00001570  103C 000E                511        MOVE.B #14,D0
00001574  4E4F                     512        TRAP #15
00001576  4EB8 123E                513        JSR   CHK_EA_SOURCE
0000157A  4EB8 128E                514        JSR   CHK_EA_DEST
0000157E  4E75                     515        RTS
00001580                           516  
00001580  43F9 00081849            517  MOVEAW LEA MAW,A1
00001586  60E8                     518         BRA BREAK2
00001588                           519        
00001588  43F9 000818B2            520  SUB   LEA SB,A1
0000158E  103C 000E                521         MOVE.B #14,D0
00001592  4E4F                     522         TRAP #15
00001594                           523         
00001594  4EB8 12C8                524         JSR  LOGIC_SIZE_CHK
00001598  4EB8 123E                525         JSR  CHK_EA_SOURCE
0000159C                           526         
0000159C  4E75                     527         RTS      
0000159E                           528        
0000159E  2614                     529  NOPETC MOVE.L (A4),D3
000015A0  E19B                     530         ROL.L #8,D3
000015A2  B63C 0046                531         CMP.B #$46,D3
000015A6  6700 0042                532         BEQ NOT
000015AA                           533         
000015AA  2614                     534         MOVE.L (A4),D3
000015AC  0803 0018                535         BTST.L #$18,D3
000015B0  6600 004E                536         BNE LEA 
000015B4  0503                     537         BTST.L D2,D3 
000015B6  6700 FF32                538         BEQ BAD
000015BA  E19B                     539         ROL.L #8,D3
000015BC  E59B                     540         ROL.L #2,D3
000015BE  0243 03FF                541         ANDI.W #$03FF,D3
000015C2  B67C 013A                542         CMP.W #$013A,D3
000015C6  6700 0046                543         BEQ JSR
000015CA                           544         
000015CA  2614                     545         MOVE.L (A4),D3
000015CC  E19B                     546         ROL.L #8,D3
000015CE  ED9B                     547         ROL.L #6,D3
000015D0  0243 3FFF                548         ANDI #$3FFF,D3
000015D4  B67C 139D                549         CMP.W #$139D,D3
000015D8  6700 0042                550         BEQ RTS
000015DC  B67C 139C                551         CMP.W #$139C,D3
000015E0  6700 0048                552         BEQ NOP
000015E4  6000 FF04                553         BRA BAD
000015E8  4E75                     554         RTS
000015EA                           555         
000015EA  43F9 00081867            556  NOT    LEA NT,A1        ;DONE, NEEDS TESTING *********************************
000015F0  103C 000E                557         MOVE.B #14,D0
000015F4  4E4F                     558         TRAP #15
000015F6  4EB8 12C8                559         JSR  LOGIC_SIZE_CHK
000015FA  4EB8 123E                560         JSR  CHK_EA_SOURCE
000015FE  4E75                     561         RTS     
00001600                           562  
00001600  43F9 00081899            563  LEA    LEA LA,A1        ;NOT WORKING RN*******************************************
00001606  103C 000E                564         MOVE.B #14,D0
0000160A  4E4F                     565         TRAP #15
0000160C  4E75                     566         RTS
0000160E                           567  
0000160E  43F9 000818B7            568  JSR    LEA JS,A1        ;NOT WORKING RN************************************
00001614  103C 000E                569         MOVE.B #14,D0
00001618  4E4F                     570         TRAP #15
0000161A  4E75                     571         RTS
0000161C  43F9 000818BC            572  RTS    LEA RT,A1       ;NOT WORKING RN*********************************
00001622  103C 000E                573         MOVE.B #14,D0
00001626  4E4F                     574         TRAP #15
00001628  4E75                     575         RTS
0000162A                           576  
0000162A  43F9 00081862            577  NOP    LEA NP,A1       ;NOT WORKING RN*********************************
00001630  103C 000E                578         MOVE.B #14,D0
00001634  4E4F                     579         TRAP #15
00001636  4E75                     580         RTS   
00001638                           581         
00001638  43F9 0008186B            582  ADDQ   LEA AQ,A1
0000163E  103C 000E                583         MOVE.B #14,D0
00001642  4E4F                     584         TRAP #15
00001644  4E75                     585         RTS
00001646                           586  
00001646  43F9 00081871            587  AND    LEA AN,A1
0000164C  103C 000E                588         MOVE.B #14,D0
00001650  4E4F                     589         TRAP #15
00001652  4E75                     590         RTS
00001654                           591         
00001654  43F9 00081876            592  ADD    LEA AD,A1
0000165A  103C 000E                593         MOVE.B #14,D0
0000165E  4E4F                     594         TRAP #15
00001660  4EB8 12C8                595         JSR  LOGIC_SIZE_CHK
00001664  4EB8 123E                596         JSR  CHK_EA_SOURCE
00001668  4E75                     597         RTS
0000166A                           598  
0000166A  43F9 0008187B            599  BRA   LEA BR,A1
00001670  103C 000E                600        MOVE.B #14,D0
00001674  4E4F                     601        TRAP #15
00001676  4E75                     602        RTS
00001678                           603  
00001678  43F9 00081880            604  BEQ   LEA BE,A1
0000167E  103C 000E                605         MOVE.B #14,D0
00001682  4E4F                     606         TRAP #15
00001684  4E75                     607         RTS
00001686                           608         
00001686  43F9 00081885            609  BGT   LEA BG,A1
0000168C  103C 000E                610         MOVE.B #14,D0
00001690  4E4F                     611         TRAP #15
00001692  4E75                     612         RTS
00001694                           613         
00001694  43F9 0008188A            614  BLE   LEA BL,A1
0000169A  103C 000E                615         MOVE.B #14,D0
0000169E  4E4F                     616         TRAP #15
000016A0  4E75                     617         RTS
000016A2                           618         
000016A2  43F9 0008188F            619  ASR   LEA AR,A1
000016A8  103C 000E                620         MOVE.B #14,D0
000016AC  4E4F                     621         TRAP #15
000016AE  4E75                     622         RTS
000016B0                           623         
000016B0  43F9 00081894            624  ASL   LEA AL,A1
000016B6  103C 000E                625         MOVE.B #14,D0
000016BA  4E4F                     626         TRAP #15
000016BC  4E75                     627         RTS
000016BE                           628         
000016BE  43F9 0008189E            629  LSR   LEA LR,A1
000016C4  103C 000E                630         MOVE.B #14,D0
000016C8  4E4F                     631         TRAP #15
000016CA  4E75                     632         RTS
000016CC                           633         
000016CC  43F9 000818A3            634  LSL   LEA LL,A1
000016D2  103C 000E                635         MOVE.B #14,D0
000016D6  4E4F                     636         TRAP #15
000016D8  4E75                     637         RTS
000016DA                           638         
000016DA  43F9 000818A8            639  ROR   LEA RR,A1
000016E0  103C 000E                640         MOVE.B #14,D0
000016E4  4E4F                     641         TRAP #15
000016E6  4E75                     642         RTS
000016E8                           643         
000016E8  43F9 000818AD            644  ROL   LEA RL,A1
000016EE  103C 000E                645         MOVE.B #14,D0
000016F2  4E4F                     646         TRAP #15
000016F4  4E75                     647         RTS
000016F6                           648  
000016F6                           649  TESTBIT
000016F6  3614                     650      MOVE.W (A4),D3
000016F8  220D                     651      MOVE.L A5,D1
000016FA  92B9 0000175E            652      SUB.L TREE,D1
00001700  E381                     653      ASL.L #1,D1
00001702  2A41                     654      MOVEA.L D1,A5
00001704  0503                     655      BTST.L D2,D3
00001706  6700 0006                656      BEQ IS_ZERO
0000170A  6000 0012                657      BRA NOT_ZERO
0000170E                           658      
0000170E                           659  IS_ZERO   * if bit D2 of (A4) is zero (go left on tree)
0000170E  5342                     660      SUBQ #1,D2
00001710  584D                     661      ADDA.W #4,A5
00001712  DBF9 0000175E            662      ADDA.L TREE,A5
00001718  2255                     663      MOVEA.L (A5),A1
0000171A  4E91                     664      JSR (A1)
0000171C  4E75                     665      RTS
0000171E                           666  
0000171E                           667  NOT_ZERO  * if bit D2 of (A4) is one (go right on tree)
0000171E  5342                     668      SUBQ #1,D2
00001720  504D                     669      ADDA.W #8,A5
00001722  DBF9 0000175E            670      ADDA.L TREE,A5
00001728  2255                     671      MOVEA.L (A5),A1
0000172A  4E91                     672      JSR (A1)
0000172C  4E75                     673      RTS
0000172E                           674  
0000172E                           675  * ----------------------------------------------------------
0000172E                           676  * GETINPUT: gets hex value in ascii from user, puts it in D3   
0000172E                           677  GETINPUT 
0000172E  103C 0002                678         MOVE.B #2,D0     * get user string
00001732  4E4F                     679         TRAP   #15      
00001734                           680  
00001734  E98B                     681  LOOP1  LSL.L  #4,D3       * get single char from string
00001736  1419                     682         MOVE.B (A1)+,D2
00001738  5341                     683         SUBI   #1,D1
0000173A  6000 0002                684         BRA HEXVAL       
0000173E                           685         
0000173E  0C02 0039                686  HEXVAL CMPI.B #$39,D2     * convert ascii char value to hex
00001742  6E08                     687         BGT.B  LETTER
00001744  0402 0030                688         SUBI.B #$30,D2
00001748  6000 000A                689         BRA    WRITE
0000174C                           690      
0000174C  0402 0037                691  LETTER SUBI.B #$37,D2
00001750  6000 0002                692         BRA    WRITE
00001754                           693      
00001754                           694  WRITE                     * write hex val to D3
00001754  D602                     695      ADD.B D2,D3
00001756  0C01 0000                696      CMPI.B #0,D1
0000175A  66D8                     697      BNE    LOOP1
0000175C  4E75                     698      RTS
0000175E                           699      
0000175E                           700      
0000175E                           701  * var storage
0000175E= 00007000                 702  TREE DC.L $7000  
00001762= 00000500                 703  EA_TREE DC.L    $0500  
00001766                           704  BEGIN DS.L $FFFF
00041762                           705  END   DS.L $FFFF
0008175E                           706  * string storage
0008175E  =0000000D                707  CR EQU $0D
0008175E  =00000009                708  LF EQU $09
0008175E= 0D 09 00                 709  NEWLINE DC.B '',CR,LF,0
00081761= 50 6C 65 61 73 65 ...    710  PROMPT1  DC.B  'Please enter the memory value of the start of the program: ',0
0008179D= 50 6C 65 61 73 65 ...    711  PROMPT2  DC.B  'Please enter the memory value of the end of the program: ',0
000817D7= 54 68 65 20 70 72 ...    712  UNDEFINED DC.B 'The program should never reach this state.',0
00081802= 54 68 65 20 64 61 ...    713  BADDATA  DC.B 'The data on line ____ is not a valid opcode.',CR,LF,0
00081831= 4D 4F 56 45 51 20 00     714  MQ DC.B 'MOVEQ ',0
00081838= 4D 4F 56 45 2E 42 ...    715  MB  DC.B 'MOVE.B ',0
00081840= 4D 4F 56 45 41 2E ...    716  MAL DC.B 'MOVEA.L ',0
00081849= 4D 4F 56 45 41 2E ...    717  MAW DC.B 'MOVEA.W ',0
00081852= 4D 4F 56 45 2E 4C ...    718  ML  DC.B 'MOVE.L ',0
0008185A= 4D 4F 56 45 2E 57 ...    719  MW  DC.B 'MOVE.W ',0
00081862= 4E 4F 50 20 00           720  NP DC.B 'NOP ',0
00081867= 4E 4F 54 00              721  NT DC.B 'NOT',0
0008186B= 41 44 44 51 20 00        722  AQ DC.B 'ADDQ ',0
00081871= 41 4E 44 20 00           723  AN DC.B 'AND ',0
00081876= 41 44 44 20 00           724  AD DC.B 'ADD ',0
0008187B= 42 52 41 20 00           725  BR DC.B 'BRA ',0
00081880= 42 45 51 20 00           726  BE DC.B 'BEQ ',0
00081885= 42 47 54 20 00           727  BG DC.B 'BGT ',0
0008188A= 42 4C 45 20 00           728  BL DC.B 'BLE ',0
0008188F= 41 53 52 20 00           729  AR DC.B 'ASR ',0
00081894= 41 53 4C 20 00           730  AL DC.B 'ASL ',0
00081899= 4C 45 41 20 00           731  LA DC.B 'LEA ',0
0008189E= 4C 53 52 20 00           732  LR DC.B 'LSR ',0
000818A3= 4C 53 4C 20 00           733  LL DC.B 'LSL ',0
000818A8= 52 4F 52 20 00           734  RR DC.B 'ROR ',0
000818AD= 52 4F 4C 20 00           735  RL DC.B 'ROL ',0
000818B2= 53 55 42 20 00           736  SB DC.B 'SUB ',0
000818B7= 4A 53 52 20 00           737  JS DC.B 'JSR ',0
000818BC= 52 54 53 20 00           738  RT DC.B 'RTS ',0
000818C1                           739  
000818C1                           740  ;necessary symbols for displaying EA's
000818C1= 44 00                    741  P_D         DC.B    'D',0
000818C3= 41 00                    742  P_A         DC.B    'A',0
000818C5= 42 00                    743  P_B         DC.B    'B',0
000818C7= 57 00                    744  P_W         DC.B    'W',0
000818C9= 4C 00                    745  P_L         DC.B    'L',0
000818CB= 2E 00                    746  P_PERIOD    DC.B    '.',0
000818CD= 28 00                    747  P_OPEN_PAR  DC.B    '(',0
000818CF= 29 00                    748  P_CLOSE_PAR DC.B    ')',0
000818D1= 2B 00                    749  P_PLUS      DC.B    '+',0
000818D3= 2D 00                    750  P_MINUS     DC.B    '-',0
000818D5= 23 00                    751  P_HASH      DC.B    '#',0
000818D7= 24 00                    752  P_HEX       DC.B    '$',0
000818D9= 25 00                    753  P_BINARY    DC.B    '%',0
000818DB= 2C 00                    754  P_COMMA     DC.B    ',',0
000818DD= 20 00                    755  P_SPACE     DC.B    ' ',0
000818DF= 0D 09 00                 756  NXT_LINE    DC.B    '',CR,LF,0
000818E2                           757  
000818E2                           758      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AD                  81876
ADD                 1654
ADDQ                1638
AL                  81894
AN                  81871
AND                 1646
AQ                  8186B
AR                  8188F
ASL                 16B0
ASR                 16A2
BAD                 14EA
BADDATA             81802
BE                  81880
BEGIN               1766
BEQ                 1678
BG                  81885
BGT                 1686
BL                  8188A
BLDLOOP             107C
BLE                 1694
BR                  8187B
BRA                 166A
BREAK               1540
BREAK2              1570
BUILDTREE           1072
BUILD_EA_TREE       1206
CHK_EA_DEST         128E
CHK_EA_SOURCE       123E
CR                  D
DECODE_OP           11F6
DONE                103A
EA_TREE             1762
END                 41762
GETINPUT            172E
HEXVAL              173E
IA_END              149A
IA_LONG             149C
IA_WORD             14A6
IS_ABS_IMM          1368
IS_DEST             137A
IS_SOURCE           1382
IS_ZERO             170E
JS                  818B7
JSR                 160E
LA                  81899
LEA                 1600
LETTER              174C
LF                  9
LL                  818A3
LOGIC_A             1346
LOGIC_BYTE          12F6
LOGIC_DONE          135A
LOGIC_LONG          132E
LOGIC_SIZE_CHK      12C8
LOGIC_WORD          1312
LOOP1               1734
LR                  8189E
LSL                 16CC
LSR                 16BE
MAL                 81840
MATH_DEST_CHK       12C2
MAW                 81849
MB                  81838
ML                  81852
MOVEAL              1550
MOVEAW              1580
MOVEB               14F8
MOVEL               1528
MOVEQ               150E
MOVEW               1558
MQ                  81831
MW                  8185A
M_ALA               14B0
M_APD               1430
M_API               13F8
M_AR                13BE
M_AWA               14C6
M_DIR_A             13D2
M_DR                13AA
M_IA                1468
NEWLINE             8175E
NEXTLINE            1020
NOP                 162A
NOPETC              159E
NOT                 15EA
NOT_ZERO            171E
NP                  81862
NT                  81867
NXT_LINE            818DF
PROMPT1             81761
PROMPT2             8179D
P_A                 818C3
P_B                 818C5
P_BINARY            818D9
P_CLOSE_PAR         818CF
P_COMMA             818DB
P_D                 818C1
P_HASH              818D5
P_HEX               818D7
P_L                 818C9
P_MINUS             818D3
P_OPEN_PAR          818CD
P_PERIOD            818CB
P_PLUS              818D1
P_SPACE             818DD
P_W                 818C7
RL                  818AD
ROL                 16E8
ROR                 16DA
RR                  818A8
RT                  818BC
RTS                 161C
SB                  818B2
START               1000
SUB                 1588
TESTBIT             16F6
TREE                175E
UNDEF               14DC
UNDEFINED           817D7
WELCOME             1040
WRITE               1754
