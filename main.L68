00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/30/2022 11:59:07 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : motorola 68k disassembler prototype
00000000                             3  * Written by : Harper Hults, Camas Collins also helped a little
00000000                             4  * Date       : 5/29/22
00000000                             5  * Description: allows for decoding of opcodes.
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:
00001000                             9          *JSR        WELCOME
00001000  247C 00005000             10          MOVEA.L     #$5000,A2    * for testing
00001006  267C 00005015             11          MOVEA.L     #$5015,A3
0000100C  2A7C 00000500             12          MOVEA.L     #$00000500,A5
00001012  284A                      13          MOVEA.L     A2,A4      * does this need to be W depending on where in mem start is?
00001014  4EB9 00001206             14          JSR         BUILD_EA_TREE
0000101A  4EB9 00001072             15          JSR         BUILDTREE    
00001020                            16      
00001020                            17  NEXTLINE 
00001020  4EB9 000011F6             18          JSR         DECODE_OP
00001026  B7CC                      19          CMP.L       A4,A3
00001028  6F00 0010                 20          BLE         DONE
0000102C  43F9 00081AB2             21          LEA         NXT_LINE,A1
00001032  303C 000D                 22          MOVE        #13,D0
00001036  4E4F                      23          TRAP        #15
00001038  60E6                      24          BRA         NEXTLINE
0000103A                            25  
0000103A                            26  DONE                * end program
0000103A  103C 0009                 27          MOVE.B      #9,D0
0000103E  4E4F                      28          TRAP        #15
00001040                            29      
00001040                            30  WELCOME
00001040  43F9 00081939             31          LEA         PROMPT1,A1  * get start memory value, put in A2
00001046  103C 000E                 32          MOVE.B      #14,D0
0000104A  4E4F                      33          TRAP        #15
0000104C                            34      
0000104C  4EB9 00001860             35          JSR         GETINPUT
00001052  23C3 0000193E             36          MOVE.L      D3,BEGIN
00001058                            37      
00001058  43F9 00081975             38          LEA         PROMPT2,A1  * get end memory value, put in D3
0000105E  103C 000E                 39          MOVE.B      #14,D0
00001062  4E4F                      40          TRAP        #15
00001064                            41      
00001064  4EB9 00001860             42          JSR         GETINPUT
0000106A  23C3 0004193A             43          MOVE.L      D3,END
00001070  4E75                      44          RTS
00001072                            45      
00001072                            46  BUILDTREE
00001072  303C 0000                 47          MOVE.W      #0,D0
00001076  2279 00001936             48          MOVEA.L     TREE,A1
0000107C                            49  BLDLOOP 
0000107C  22FC 0000153E             50          MOVE.L      #UNDEF,(A1)+    * initialize whole tree to undefined
00001082  5240                      51          ADDQ        #1,D0
00001084  B07C 0201                 52          CMP.W       #513,D0
00001088  66F2                      53          BNE         BLDLOOP
0000108A                            54          
0000108A  2279 00001936             55          MOVEA.L     TREE,A1
00001090                            56  
00001090  22FC 00001826             57          MOVE.L #TESTBIT,(A1)+  * nodes 0 - 11 are decision nodes
00001096  22FC 00001826             58          MOVE.L #TESTBIT,(A1)+
0000109C  22FC 00001826             59          MOVE.L #TESTBIT,(A1)+
000010A2  22FC 00001826             60          MOVE.L #TESTBIT,(A1)+
000010A8  22FC 00001826             61          MOVE.L #TESTBIT,(A1)+
000010AE  22FC 00001826             62          MOVE.L #TESTBIT,(A1)+
000010B4  22FC 00001826             63          MOVE.L #TESTBIT,(A1)+
000010BA  22FC 00001826             64          MOVE.L #TESTBIT,(A1)+
000010C0  22FC 00001826             65          MOVE.L #TESTBIT,(A1)+
000010C6  22FC 00001826             66          MOVE.L #TESTBIT,(A1)+
000010CC  22FC 00001826             67          MOVE.L #TESTBIT,(A1)+
000010D2  22FC 00001826             68          MOVE.L #TESTBIT,(A1)+
000010D8  22FC 0000154C             69          MOVE.L #BAD,(A1)+      * node 12 is an invalid code
000010DE  22FC 00001826             70          MOVE.L #TESTBIT,(A1)+  * nodes 13&14 are decision nodes
000010E4  22FC 00001826             71          MOVE.L #TESTBIT,(A1)+
000010EA  22FC 0000154C             72          MOVE.L #BAD,(A1)+      * node 15 is an invalid node
000010F0  22FC 0000155C             73          MOVE.L #MOVEB,(A1)+    * put MOVE.B at node 16
000010F6  22FC 000015AA             74          MOVE.L #MOVEL,(A1)+    * MOVE.L/MOVEA.L goes at node 17
000010FC  22FC 000015E6             75          MOVE.L #MOVEW,(A1)+    * MOVE.W/MOVEA.W goes at 18
00001102  22FC 0000163A             76          MOVE.L #NOPETC,(A1)+   * NOP et al. subroutine goes at 19
00001108  22FC 000016F8             77          MOVE.L #ADDQ,(A1)+     * ADDQ goes at 20
0000110E  22FC 00001826             78          MOVE.L #TESTBIT,(A1)+  * 21 is a decision node
00001114  22FC 0000157E             79          MOVE.L #MOVEQ,(A1)+    * MOVEQ goes at 22
0000111A  22FC 0000154C             80          MOVE.L #BAD,(A1)+      * 23 is invalid code
00001120  22FC 00001622             81          MOVE.L #SUB,(A1)+      * 24 is SUB
00001126                            82          
00001126  5049                      83          ADDA.W #8,A1           * should put us at TREE + $6C
00001128  22FC 00001742             84          MOVE.L #AND,(A1)+      * node 27 is AND
0000112E  22FC 0000175A             85          MOVE.L #ADD,(A1)+      * node 28 is ADD
00001134  22FC 00001826             86          MOVE.L #TESTBIT,(A1)+  * 29 is a decision node
0000113A  22FC 0000154C             87          MOVE.L #BAD,(A1)+      * 30 is invalid code, puts us at TREE + $7C
00001140                            88          
00001140  D2FC 0030                 89          ADDA.W #$30,A1         * go to TREE + $AC which is node 43
00001144  22FC 00001826             90          MOVE.L #TESTBIT,(A1)+  * 43 is decision node
0000114A  22BC 00001826             91          MOVE.L #TESTBIT,(A1)   * 44 is decision node, should be B0
00001150                            92          
00001150  D2FC 003C                 93          ADDA.W #$3C,A1         * should put us at TREE + $EC
00001154  22FC 00001826             94          MOVE.L #TESTBIT,(A1)+  * node 59 is decision
0000115A  22BC 0000154C             95          MOVE.L #BAD,(A1)       * node 60 is invalid code
00001160                            96          
00001160  D2FC 006C                 97          ADDA.W #$6C,A1         * should put us at TREE + $15C
00001164  22FC 0000179A             98          MOVE.L #BRA,(A1)+      * node 87 is BRA
0000116A  22FC 000017A8             99          MOVE.L #BEQ,(A1)+      * node 88 is BEQ
00001170  22FC 0000154C            100          MOVE.L #BAD,(A1)+      * node 89 is an invalid code
00001176  22BC 00001826            101          MOVE.L #TESTBIT,(A1)   * node 90 is a decision node
0000117C                           102          
0000117C  D2FC 0074                103          ADDA.W #$74,A1         * should put us at TREE + $DC?
00001180  22FC 00001826            104          MOVE.L #TESTBIT,(A1)+  * nodes 119,120 are decision nodes
00001186  22BC 00001826            105          MOVE.L #TESTBIT,(A1)   * A1= TREE + $1E0?
0000118C                           106          
0000118C  D2FC 00F4                107          ADDA.W #$F4,A1         * puts us at TREE + $2D4?
00001190  22FC 0000154C            108          MOVE.L #BAD,(A1)+      * node 181 is an invalid code
00001196  22BC 00001826            109          MOVE.L #TESTBIT,(A1)   * node 182 is a decision node
0000119C                           110          
0000119C  D2FC 00E4                111          ADDA.W #$E4,A1
000011A0  22FC 00001826            112          MOVE.L #TESTBIT,(A1)+  * node 239 is a deicsion node
000011A6  22FC 00001826            113          MOVE.L #TESTBIT,(A1)+  * node 240 is a deicsion node
000011AC  22FC 0000154C            114          MOVE.L #BAD,(A1)+      * node 241 is an invalid code
000011B2  22BC 00001826            115          MOVE.L #TESTBIT,(A1)   * node 242 is a deicsion node
000011B8                           116          
000011B8  D2FC 01EC                117          ADDA.W #$1EC,A1
000011BC  22FC 000017B6            118          MOVE.L #BGT,(A1)+      * node 365 is BGT
000011C2  22BC 000017C4            119          MOVE.L #BLE,(A1)       * node 366 is BLE
000011C8                           120          
000011C8  D2FC 01C4                121          ADDA.W #$1C4,A1
000011CC  22FC 000017D2            122          MOVE.L #ASR,(A1)+      * node 479 is ASR
000011D2  22FC 000017E0            123          MOVE.L #ASL,(A1)+      * node 480 is ASL
000011D8  22FC 000017EE            124          MOVE.L #LSR,(A1)+      * node 481 is LSR
000011DE  22BC 000017FC            125          MOVE.L #LSL,(A1)       * node 482 is LSL
000011E4                           126          
000011E4  D2FC 000C                127          ADDA.W #$C,A1
000011E8  22FC 0000180A            128          MOVE.L #ROR,(A1)+      * node 485 is ROR
000011EE  22BC 00001818            129          MOVE.L #ROL,(A1)       * node 486 is ROL
000011F4                           130          
000011F4  4E75                     131          RTS
000011F6                           132      
000011F6                           133  DECODE_OP 
000011F6  143C 000F                134          MOVE.B      #$F,D2 * decodes the opcode at A4
000011FA  2A79 00001936            135          MOVEA.L     TREE,A5
00001200  2255                     136          MOVEA.L     (A5),A1
00001202  4E91                     137          JSR         (A1)
00001204  4E75                     138          RTS    
00001206                           139  *-----------------------------------------------------------
00001206                           140  *EA STUFF STARTS HERE
00001206                           141  *-----------------------------------------------------------
00001206                           142  ;BUILDS THE BINARY EA TREE FOR COMPARISONS
00001206                           143  BUILD_EA_TREE   
00001206                           144              ;ALL THE REGISTERS ADDED TO ARRAY
00001206  2AFC 000013D4            145              MOVE.L  #M_DR,(A5)+
0000120C  2AFC 000013E8            146              MOVE.L  #M_AR,(A5)+
00001212  2AFC 000013FC            147              MOVE.L  #M_DIR_A,(A5)+
00001218  2AFC 00001422            148              MOVE.L  #M_API,(A5)+
0000121E  2AFC 0000145A            149              MOVE.L  #M_APD,(A5)+
00001224                           150              ;ABSOLUTE AND IMMEDIATE ADDED TO ARRAY           
00001224  2AFC 00001528            151              MOVE.L  #M_AWA,(A5)+
0000122A  2AFC 00001512            152              MOVE.L  #M_ALA,(A5)+
00001230  2AFC 00000000            153              MOVE.L  #$00000000,(A5)+ ;added to simplify algorithm
00001236  2AFC 00000000            154              MOVE.L  #$00000000,(A5)+ ;added to simplify algorithm
0000123C  2AFC 00001492            155              MOVE.L  #M_IA,(A5)+
00001242  4E75                     156              RTS            
00001244                           157  *-----------------------------------------------------------          
00001244                           158  ;COMPARES A SOURCE MODE FROM THE OPCODE TO THE EA TREE
00001244                           159  CHK_EA_SOURCE         
00001244  4285                     160              CLR.L   D5
00001246  2A0C                     161              MOVE.L  A4,D5
00001248  5445                     162              ADDQ    #$2,D5
0000124A  2845                     163              MOVEA.L D5,A4  
0000124C                           164                 
0000124C  4285                     165              CLR.L   D5
0000124E  3A03                     166              MOVE.W  D3,D5 
00001250  0245 0038                167              ANDI.W  #$0038,D5
00001254  E64D                     168              LSR.W   #$3,D5
00001256                           169              
00001256  BA3C 0007                170              CMP.B   #$7,D5
0000125A  6700 004E                171              BEQ     IS_ABS_IMM            
0000125E                           172              
0000125E  CAFC 0004                173              MULU.W  #$4,D5
00001262  DAB9 0000193A            174              ADD.L   EA_TREE,D5
00001268  2A45                     175              MOVEA.L D5,A5
0000126A                           176             
0000126A  4281                     177              CLR.L   D1
0000126C  3203                     178              MOVE.W  D3,D1 
0000126E  0241 0007                179              ANDI.W  #$0007,D1
00001272                           180                          
00001272  2C55                     181              MOVEA.L (A5),A6
00001274  4E96                     182              JSR     (A6)    
00001276                           183              
00001276  4285                     184              CLR.L   D5
00001278                           185  
00001278  4E75                     186              RTS
0000127A                           187  *-----------------------------------------------------------
0000127A                           188  ;COMPARES A DESTINATION MODE FROM THE OPCODE TO THE EA TREE FOR MOVE INSTRUCTIONS
0000127A                           189  CHK_EA_DEST       
0000127A  4285                     190              CLR.L   D5
0000127C  3A03                     191              MOVE.W  D3,D5 
0000127E  0245 01C0                192              ANDI.W  #$01C0,D5
00001282  EC4D                     193              LSR.W   #$6,D5
00001284                           194              
00001284  7C09                     195              MOVE.L  #9,D6
00001286                           196              
00001286  BA3C 0007                197              CMP.B   #$7,D5
0000128A  6700 001E                198              BEQ     IS_ABS_IMM            
0000128E                           199              
0000128E  CAFC 0004                200              MULU.W  #$4,D5
00001292  DAB9 0000193A            201              ADD.L   EA_TREE,D5
00001298  2A45                     202              MOVEA.L D5,A5
0000129A                           203              
0000129A  4281                     204              CLR.L   D1
0000129C  3203                     205              MOVE.W  D3,D1 
0000129E  0241 0E00                206              ANDI.W  #$0E00,D1
000012A2  EF59                     207              ROL.W   #$7,D1
000012A4                           208           
000012A4  2C55                     209              MOVEA.L (A5),A6
000012A6  4E96                     210              JSR     (A6)
000012A8                           211              
000012A8  4E75                     212              RTS      
000012AA                           213  *-----------------------------------------------------------
000012AA                           214  ;COMPARES REGISTER NUMBER FOR ABSOLUTES AND IMMEDIATES FOR PRINTING
000012AA                           215  IS_ABS_IMM      
000012AA  3A03                     216              MOVE.W  D3,D5
000012AC  BC7C 0009                217              CMP     #9,D6
000012B0  6700 000A                218              BEQ     IS_DEST                   
000012B4  0245 0007                219              ANDI.W  #$0007,D5
000012B8  6000 000C                220              BRA     IS_SOURCE                        
000012BC                           221  IS_DEST    
000012BC  0245 0E00                222              ANDI.W  #$0E00,D5
000012C0  EF5D                     223              ROL.W   #$07,D5
000012C2  6000 0002                224              BRA     IS_SOURCE             
000012C6                           225  IS_SOURCE
000012C6  5845                     226              ADDQ    #$4,D5
000012C8  CAFC 0004                227              MULU.W  #$04,D5
000012CC  5845                     228              ADDQ    #$4,D5
000012CE  DAB9 0000193A            229              ADD.L   EA_TREE,D5
000012D4                           230              
000012D4  2A45                     231              MOVEA.L D5,A5
000012D6  2C55                     232              MOVEA.L (A5),A6
000012D8  4E96                     233              JSR     (A6)
000012DA                           234              
000012DA  4E75                     235              RTS
000012DC                           236  *-----------------------------------------------------------            
000012DC                           237  LOGIC_PARAMETER_CHK
000012DC  4285                     238              CLR.L   D5
000012DE  4281                     239              CLR.L   D1
000012E0                           240  
000012E0  3A03                     241              MOVE.W  D3,D5
000012E2  0805 0008                242              BTST    #$08,D5
000012E6  6700 0024                243              BEQ     LOGIC_TOEA
000012EA                           244              ;IF THE DESTINATION IS A REGISTER
000012EA  3203                     245              MOVE.W  D3,D1
000012EC  0241 0E00                246              ANDI.W  #$0E00,D1
000012F0  EF59                     247              ROL.W   #$07,D1
000012F2  4EB9 000013D4            248              JSR     M_DR 
000012F8  4281                     249              CLR.L   D1            
000012FA  43F9 00081AAE            250              LEA     P_COMMA,A1
00001300  303C 000E                251              MOVE    #14,D0
00001304  4E4F                     252              TRAP    #15           
00001306  4EB8 1244                253              JSR     CHK_EA_SOURCE
0000130A  4E75                     254              RTS           
0000130C                           255  LOGIC_TOEA  ;IF THE DESTINATION IS AN ADDRESS            
0000130C  4EB8 1244                256              JSR     CHK_EA_SOURCE            
00001310  43F9 00081AAE            257              LEA     P_COMMA,A1
00001316  303C 000E                258              MOVE    #14,D0
0000131A  4E4F                     259              TRAP    #15 
0000131C  3203                     260              MOVE.W  D3,D1
0000131E  0241 0E00                261              ANDI.W  #$0E00,D1
00001322  EF59                     262              ROL.W   #$07,D1          
00001324  4EB9 000013D4            263              JSR     M_DR 
0000132A  4281                     264              CLR.L   D1            
0000132C  4E75                     265              RTS
0000132E                           266  *-----------------------------------------------------------            
0000132E                           267  ;CHECKS AND PRINTS SIZE (.L/.W/.B)FOR ADD/AND/SUB/ADDA/OR/NOT
0000132E                           268  LOGIC_SIZE_CHK      
0000132E  4285                     269              CLR.L   D5
00001330  3A03                     270              MOVE.W  D3,D5
00001332  0245 00C0                271              ANDI.W  #$00C0,D5
00001336  EC4D                     272              LSR.W   #$06,D5 
00001338                           273              
00001338  BA7C 0000                274              CMP     #00,D5
0000133C  6700 001E                275              BEQ     LOGIC_BYTE            
00001340  BA7C 0001                276              CMP     #01,D5
00001344  6700 0032                277              BEQ     LOGIC_WORD           
00001348  BA7C 0002                278              CMP     #02,D5
0000134C  6700 0046                279              BEQ     LOGIC_LONG  
00001350  BA7C 0003                280              CMP     #03,D5
00001354  6700 005A                281              BEQ     LOGIC_A          
00001358  6000 006C                282              BRA     LOGIC_DONE
0000135C                           283  LOGIC_BYTE  ;IF THE INSTRICTION IS BYTE SIZED
0000135C  43F9 00081A9E            284              LEA     P_PERIOD,A1
00001362  103C 000E                285              MOVE.B  #14,D0
00001366  4E4F                     286              TRAP    #15            
00001368  43F9 00081A90            287              LEA     P_B,A1
0000136E  103C 000E                288              MOVE.B  #14,D0
00001372  4E4F                     289              TRAP    #15            
00001374  6000 0050                290              BRA     LOGIC_DONE
00001378                           291  LOGIC_WORD  ;IF THE INSTRICTION IS WORD SIZED
00001378  43F9 00081A9E            292              LEA     P_PERIOD,A1
0000137E  103C 000E                293              MOVE.B  #14,D0
00001382  4E4F                     294              TRAP    #15            
00001384  43F9 00081A9A            295              LEA     P_W,A1
0000138A  103C 000E                296              MOVE.B  #14,D0
0000138E  4E4F                     297              TRAP    #15            
00001390  6000 0034                298              BRA     LOGIC_DONE
00001394                           299  LOGIC_LONG    ;IF THE INSTRICTION IS LONG-WORD SIZED
00001394  43F9 00081A9E            300              LEA     P_PERIOD,A1
0000139A  103C 000E                301              MOVE.B  #14,D0
0000139E  4E4F                     302              TRAP    #15            
000013A0  43F9 00081A9C            303              LEA     P_L,A1
000013A6  103C 000E                304              MOVE.B  #14,D0
000013AA  4E4F                     305              TRAP    #15  
000013AC  6000 0018                306              BRA     LOGIC_DONE
000013B0                           307  LOGIC_A     ;IF THE INSTRUCTION IS ADDA, PRINTS THE A
000013B0  43F9 00081A8E            308              LEA     P_A,A1
000013B6  103C 000E                309              MOVE.B  #14,D0
000013BA  4E4F                     310              TRAP    #15
000013BC  7C08                     311              MOVE.L  #$08,D6                        
000013BE  0805 0008                312              BTST    #$8,D5
000013C2  66B4                     313              BNE     LOGIC_WORD
000013C4  60CE                     314              BRA     LOGIC_LONG                                 
000013C6                           315  LOGIC_DONE
000013C6  43F9 00081AB0            316              LEA     P_SPACE,A1
000013CC  303C 000E                317              MOVE    #14,D0
000013D0  4E4F                     318              TRAP    #15
000013D2                           319               
000013D2  4E75                     320              RTS   
000013D4                           321  *-----------------------------------------------------------  
000013D4                           322  SHIFT_ROTATION_PARAMETER_CHK   
000013D4                           323  *-----------------------------------------------------------    
000013D4                           324  M_DR    ;IF MODE IS A DATA REGISTER Dn
000013D4                           325              
000013D4  43F9 00081A94            326              LEA     P_D,A1
000013DA  103C 000E                327              MOVE.B  #14,D0    
000013DE  4E4F                     328              TRAP    #15
000013E0                           329      
000013E0  103C 0003                330              MOVE.B  #3,D0
000013E4  4E4F                     331              TRAP    #15 
000013E6                           332              
000013E6  4E75                     333              RTS
000013E8                           334  *-----------------------------------------------------------            
000013E8                           335  M_AR    ;IF MODE IS AN ADDRESS REGISTER An
000013E8                           336  
000013E8  43F9 00081A8E            337              LEA     P_A,A1
000013EE  103C 000E                338              MOVE.B  #14,D0    
000013F2  4E4F                     339              TRAP    #15  
000013F4                           340  
000013F4  103C 0003                341              MOVE.B  #3,D0
000013F8  4E4F                     342              TRAP    #15  
000013FA                           343              
000013FA  4E75                     344              RTS
000013FC                           345  *-----------------------------------------------------------
000013FC                           346  M_DIR_A ;IF MODE IS A DIRECT ADDRESS (An)
000013FC                           347  
000013FC  43F9 00081AA0            348              LEA     P_OPEN_PAR,A1
00001402  103C 000E                349              MOVE.B  #14,D0    
00001406  4E4F                     350              TRAP    #15 
00001408                           351              
00001408  43F9 00081A8E            352              LEA     P_A,A1
0000140E  103C 000E                353              MOVE.B  #14,D0    
00001412  4E4F                     354              TRAP    #15
00001414                           355              
00001414  43F9 00081AA2            356              LEA     P_CLOSE_PAR,A1
0000141A  103C 000E                357              MOVE.B  #14,D0    
0000141E  4E4F                     358              TRAP    #15
00001420                           359              
00001420  4E75                     360              RTS  
00001422                           361  *-----------------------------------------------------------
00001422                           362  M_API   ;IF MODE IS AN ADDRESS WITH POSTINCREMENT (An)+
00001422                           363  
00001422  43F9 00081AA0            364              LEA     P_OPEN_PAR,A1
00001428  103C 000E                365              MOVE.B  #14,D0    
0000142C  4E4F                     366              TRAP    #15 
0000142E                           367              
0000142E  43F9 00081A8E            368              LEA     P_A,A1
00001434  103C 000E                369              MOVE.B  #14,D0    
00001438  4E4F                     370              TRAP    #15
0000143A                           371              
0000143A  103C 0003                372              MOVE.B  #3,D0
0000143E  4E4F                     373              TRAP    #15 
00001440                           374              
00001440  43F9 00081AA2            375              LEA     P_CLOSE_PAR,A1
00001446  103C 000E                376              MOVE.B  #14,D0    
0000144A  4E4F                     377              TRAP    #15
0000144C                           378              
0000144C  43F9 00081AA4            379              LEA     P_PLUS,A1
00001452  103C 000E                380              MOVE.B  #14,D0    
00001456  4E4F                     381              TRAP    #15
00001458                           382              
00001458  4E75                     383              RTS  
0000145A                           384  *-----------------------------------------------------------
0000145A                           385  M_APD   ;IF MODE IS AN ADDRESS WITH PREDECREMENT -(An)
0000145A                           386  
0000145A  43F9 00081AA6            387              LEA     P_MINUS,A1
00001460  103C 000E                388              MOVE.B  #14,D0    
00001464  4E4F                     389              TRAP    #15
00001466                           390  
00001466  43F9 00081AA0            391              LEA     P_OPEN_PAR,A1
0000146C  103C 000E                392              MOVE.B  #14,D0    
00001470  4E4F                     393              TRAP    #15 
00001472                           394              
00001472  43F9 00081A8E            395              LEA     P_A,A1
00001478  103C 000E                396              MOVE.B  #14,D0    
0000147C  4E4F                     397              TRAP    #15
0000147E                           398              
0000147E  103C 0003                399              MOVE.B  #3,D0
00001482  4E4F                     400              TRAP    #15 
00001484                           401              
00001484  43F9 00081AA2            402              LEA     P_CLOSE_PAR,A1
0000148A  103C 000E                403              MOVE.B  #14,D0    
0000148E  4E4F                     404              TRAP    #15
00001490                           405              
00001490  4E75                     406              RTS  
00001492                           407  *-----------------------------------------------------------
00001492                           408  M_IA    ;IF MODE IS IMMIDIATE ADDRESSING #IMM
00001492                           409  
00001492  43F9 00081AA8            410              LEA     P_HASH,A1
00001498  103C 000E                411              MOVE.B  #14,D0    
0000149C  4E4F                     412              TRAP    #15             
0000149E  43F9 00081AAA            413              LEA     P_HEX,A1
000014A4  103C 000E                414              MOVE.B  #14,D0    
000014A8  4E4F                     415              TRAP    #15
000014AA  3803                     416              MOVE.W  D3,D4   
000014AC  BC7C 0006                417              CMP     #6,D6
000014B0  6700 0020                418              BEQ     IA_LOGIC_SIZE
000014B4  BC7C 0008                419              CMP     #8,D6
000014B8  6700 002E                420              BEQ     IA_ADDA_SIZE
000014BC                           421              
000014BC  0244 3000                422              ANDI.W  #$3000,D4
000014C0  E95C                     423              ROL.W   #4,D4
000014C2  B87C 0003                424              CMP     #$3,D4
000014C6  6700 0040                425              BEQ     IA_WORD            
000014CA  B87C 0002                426              CMP     #2,D4
000014CE  6700 002E                427              BEQ     IA_LONG    
000014D2                           428              
000014D2                           429  IA_LOGIC_SIZE
000014D2  0244 00C0                430              ANDI.W  #$00C0,D4
000014D6  EC4C                     431              LSR.W   #6,D4
000014D8  B87C 0001                432              CMP     #$1,D4
000014DC  6700 002A                433              BEQ     IA_WORD            
000014E0  B87C 0002                434              CMP     #2,D4
000014E4  6700 0018                435              BEQ     IA_LONG   
000014E8                           436  IA_ADDA_SIZE 
000014E8  0244 0100                437              ANDI.W  #$0100,D4
000014EC  E04C                     438              LSR.W   #8,D4
000014EE  B87C 0000                439              CMP     #$0,D4
000014F2  6700 0014                440              BEQ     IA_WORD            
000014F6  B87C 0001                441              CMP     #1,D4
000014FA  6700 0002                442              BEQ     IA_LONG                             
000014FE                           443  IA_LONG
000014FE  281C                     444              MOVE.L  (A4)+,D4
00001500  4EB9 00001890            445              JSR PRINTHEX
00001506  4E75                     446              RTS            
00001508                           447  IA_WORD
00001508  381C                     448              MOVE.W  (A4)+,D4
0000150A  4EB9 00001890            449              JSR PRINTHEX
00001510  4E75                     450              RTS          
00001512                           451  *-----------------------------------------------------------
00001512                           452  M_ALA   ;IF MODE IS AN ABSOLUTE LONG ADDRESS (xxx).L
00001512                           453  
00001512  43F9 00081AAA            454              LEA     P_HEX,A1
00001518  103C 000E                455              MOVE.B  #14,D0    
0000151C  4E4F                     456              TRAP    #15 
0000151E                           457              
0000151E  281C                     458              MOVE.L  (A4)+,D4
00001520  4EB9 00001890            459              JSR PRINTHEX
00001526                           460  
00001526  4E75                     461              RTS  
00001528                           462  *-----------------------------------------------------------
00001528                           463  M_AWA   ;IF MODE IS AN ABSOLUTE WORD ADDRESS (xxx).W
00001528                           464  
00001528  43F9 00081AAA            465              LEA     P_HEX,A1
0000152E  103C 000E                466              MOVE.B  #14,D0    
00001532  4E4F                     467              TRAP    #15 
00001534                           468              
00001534  281C                     469              MOVE.L  (A4)+,D4
00001536  4EB9 00001890            470              JSR PRINTHEX
0000153C                           471  
0000153C  4E75                     472              RTS    
0000153E                           473  *-----------------------------------------------------------
0000153E                           474  *INSTRUCTION PRINTING START HERE         
0000153E                           475  *----------------------------------------------------------- 
0000153E                           476  UNDEF  
0000153E  43F9 000819AF            477         LEA      UNDEFINED,A1
00001544  103C 000E                478         MOVE.B   #14,D0
00001548  4E4F                     479         TRAP     #15
0000154A  4E75                     480         RTS 
0000154C                           481  *-----------------------------------------------------------      
0000154C                           482  BAD    
0000154C  43F9 000819DA            483         LEA      BADDATA,A1
00001552  103C 000E                484         MOVE.B   #14,D0
00001556  4E4F                     485         TRAP     #15
00001558  548C                     486         ADD.L    #$2,A4
0000155A  4E75                     487         RTS
0000155C                           488  *-----------------------------------------------------------      
0000155C                           489  MOVEB  
0000155C  43F9 00081A10            490         LEA      MB,A1
00001562  103C 000E                491         MOVE.B   #14,D0
00001566  4E4F                     492         TRAP     #15
00001568                           493         
00001568  4EB8 1244                494         JSR      CHK_EA_SOURCE
0000156C  43F9 00081AAE            495         LEA      P_COMMA,A1
00001572  303C 000E                496         MOVE     #14,D0
00001576  4E4F                     497         TRAP     #15
00001578  4EB8 127A                498         JSR      CHK_EA_DEST
0000157C                           499         
0000157C  4E75                     500         RTS 
0000157E                           501  *-----------------------------------------------------------      
0000157E                           502  MOVEQ  
0000157E  43F9 00081A09            503         LEA      MQ,A1     
00001584  103C 000E                504         MOVE.B   #14,D0
00001588  4E4F                     505         TRAP     #15
0000158A                           506         
0000158A  4281                     507         CLR.L    D1
0000158C  3203                     508         MOVE.W   D3,D1
0000158E  0641 00FF                509         ADDI.W   #$00FF,D1
00001592  103C 0003                510         MOVE.B   #3,D0
00001596  4E4F                     511         TRAP     #15
00001598                           512        
00001598  43F9 00081AAE            513         LEA      P_COMMA,A1
0000159E  303C 000E                514         MOVE     #14,D0
000015A2  4E4F                     515         TRAP     #15         
000015A4  4EB8 127A                516         JSR      CHK_EA_DEST
000015A8                           517         
000015A8  4E75                     518         RTS
000015AA                           519  *-----------------------------------------------------------       
000015AA                           520  MOVEL 
000015AA  4285                     521         CLR.L    D5
000015AC  3A03                     522         MOVE.W   D3,D5
000015AE  0245 01C0                523         ANDI.W   #$01C0,D5
000015B2  EC4D                     524         LSR.W    #$06,D5
000015B4  BA3C 0001                525         CMP.B    #1,D5
000015B8  6700 0024                526         BEQ      MOVEAL      
000015BC  43F9 00081A2A            527         LEA      ML,A1        
000015C2                           528  BREAKL      
000015C2  103C 000E                529         MOVE.B   #14,D0
000015C6  4E4F                     530         TRAP     #15
000015C8  4EB8 1244                531         JSR      CHK_EA_SOURCE
000015CC  43F9 00081AAE            532         LEA      P_COMMA,A1
000015D2  303C 000E                533         MOVE     #14,D0
000015D6  4E4F                     534         TRAP     #15
000015D8  4EB8 127A                535         JSR      CHK_EA_DEST      
000015DC  4E75                     536         RTS     
000015DE                           537  MOVEAL 
000015DE  43F9 00081A18            538         LEA      MAL,A1
000015E4  60DC                     539         BRA      BREAKL
000015E6                           540  *-----------------------------------------------------------      
000015E6                           541  MOVEW 
000015E6  4285                     542         CLR.L    D5
000015E8  3A03                     543         MOVE.W   D3,D5
000015EA  0245 01C0                544         ANDI.W   #$01C0,D5
000015EE  EC4D                     545         LSR.W    #$06,D5
000015F0  BA3C 0001                546         CMP.B    #1,D5
000015F4  6700 0024                547         BEQ      MOVEAW      
000015F8  43F9 00081A32            548         LEA      MW,A1
000015FE                           549  BREAKW
000015FE  103C 000E                550         MOVE.B   #14,D0
00001602  4E4F                     551         TRAP     #15
00001604  4EB8 1244                552         JSR      CHK_EA_SOURCE
00001608  43F9 00081AAE            553         LEA      P_COMMA,A1
0000160E  303C 000E                554         MOVE     #14,D0
00001612  4E4F                     555         TRAP     #15
00001614  4EB8 127A                556         JSR      CHK_EA_DEST
00001618  4E75                     557         RTS
0000161A                           558  MOVEAW 
0000161A  43F9 00081A21            559         LEA      MAW,A1
00001620  60DC                     560         BRA      BREAKW
00001622                           561  *-----------------------------------------------------------      
00001622                           562  SUB    
00001622  43F9 00081A81            563         LEA      SB,A1
00001628  103C 000E                564         MOVE.B   #14,D0
0000162C  4E4F                     565         TRAP     #15       
0000162E  4EB8 132E                566         JSR      LOGIC_SIZE_CHK 
00001632  7C06                     567         MOVE.L   #6,D6  
00001634  4EB8 12DC                568         JSR      LOGIC_PARAMETER_CHK    
00001638  4E75                     569         RTS      
0000163A                           570  *-----------------------------------------------------------      
0000163A                           571  NOPETC 
0000163A  2614                     572         MOVE.L   (A4),D3
0000163C  E19B                     573         ROL.L    #8,D3
0000163E  B63C 0046                574         CMP.B    #$46,D3
00001642  6700 003E                575         BEQ      NOT
00001646                           576         
00001646  3614                     577         MOVE.W   (A4),D3
00001648  0803 0008                578         BTST.L   #$8,D3
0000164C  6600 004C                579         BNE      LEA 
00001650  0503                     580         BTST.L   D2,D3 
00001652  6700 FEF8                581         BEQ      BAD
00001656  EC5B                     582         ROR.W    #6,D3
00001658  0243 03FF                583         ANDI.W   #$03FF,D3
0000165C  B67C 013A                584         CMP.W    #$013A,D3
00001660  6700 0066                585         BEQ      JSR
00001664                           586         
00001664  2614                     587         MOVE.L   (A4),D3
00001666  E45B                     588         ROR.W    #2,D3
00001668  0243 3FFF                589         ANDI     #$3FFF,D3
0000166C  B67C 139D                590         CMP.W    #$139D,D3
00001670  6700 006A                591         BEQ      RTS
00001674  B67C 139C                592         CMP.W    #$139C,D3
00001678  6700 0070                593         BEQ      NOP
0000167C  6000 FECE                594         BRA      BAD
00001680  4E75                     595         RTS
00001682                           596  *-----------------------------------------------------------       
00001682                           597  NOT    
00001682  43F9 00081A3E            598         LEA      NT,A1        
00001688  103C 000E                599         MOVE.B   #14,D0
0000168C  4E4F                     600         TRAP     #15
0000168E  4EB8 132E                601         JSR      LOGIC_SIZE_CHK
00001692  7C06                     602         MOVE.L   #6,D6
00001694  4EB8 1244                603         JSR      CHK_EA_SOURCE
00001698  4E75                     604         RTS     
0000169A                           605  *-----------------------------------------------------------
0000169A                           606  LEA    
0000169A  43F9 00081A6C            607         LEA      LA,A1        ;NOT WORKING RN*******************************************
000016A0  103C 000E                608         MOVE.B   #14,D0
000016A4  4E4F                     609         TRAP     #15
000016A6  3614                     610         MOVE.W   (A4),D3
000016A8  4EB8 1244                611         JSR      CHK_EA_SOURCE
000016AC  43F9 00081AAE            612         LEA      P_COMMA,A1
000016B2  303C 000E                613         MOVE     #14,D0
000016B6  4E4F                     614         TRAP     #15
000016B8  4281                     615         CLR.L   D1
000016BA  3203                     616         MOVE.W  D3,D1 
000016BC  0241 0E00                617         ANDI.W  #$0E00,D1
000016C0  EF59                     618         ROL.W   #$7,D1
000016C2  4EB8 13E8                619         JSR M_AR
000016C6                           620  
000016C6  4E75                     621         RTS
000016C8                           622  *-----------------------------------------------------------
000016C8                           623  JSR    
000016C8  43F9 00081A85            624         LEA      JS,A1        ;NOT WORKING RN************************************
000016CE  103C 000E                625         MOVE.B   #14,D0
000016D2  4E4F                     626         TRAP     #15
000016D4  3614                     627         MOVE.W   (A4),D3
000016D6  4EB8 1244                628         JSR      CHK_EA_SOURCE
000016DA  4E75                     629         RTS
000016DC                           630  *-----------------------------------------------------------       
000016DC                           631  RTS    
000016DC  43F9 00081A8A            632         LEA      RT,A1       ;NOT WORKING RN*********************************
000016E2  103C 000E                633         MOVE.B   #14,D0
000016E6  4E4F                     634         TRAP     #15
000016E8  4E75                     635         RTS
000016EA                           636  *-----------------------------------------------------------
000016EA                           637  NOP    
000016EA  43F9 00081A3A            638         LEA      NP,A1       ;NOT WORKING RN*********************************
000016F0  103C 000E                639         MOVE.B   #14,D0
000016F4  4E4F                     640         TRAP     #15
000016F6  4E75                     641         RTS   
000016F8                           642  *-----------------------------------------------------------       
000016F8                           643  ADDQ   
000016F8  43F9 00081A42            644         LEA      AQ,A1
000016FE  103C 000E                645         MOVE.B   #14,D0
00001702  4E4F                     646         TRAP     #15
00001704                           647         
00001704  4281                     648         CLR.L    D1
00001706  3203                     649         MOVE.W   D3,D1
00001708  0241 0E00                650         ANDI.W   #$0E00,D1
0000170C  EF59                     651         ROL.W    #$07,D1
0000170E                           652  
0000170E  43F9 00081AA8            653         LEA      P_HASH,A1
00001714  103C 000E                654         MOVE.B   #14,D0    
00001718  4E4F                     655         TRAP     #15 
0000171A                           656            
0000171A  43F9 00081AAA            657         LEA      P_HEX,A1
00001720  103C 000E                658         MOVE.B   #14,D0    
00001724  4E4F                     659         TRAP     #15
00001726                           660         
00001726  103C 0003                661         MOVE.B   #3,D0
0000172A  4E4F                     662         TRAP     #15
0000172C  4281                     663         CLR.L    D1
0000172E                           664         
0000172E  43F9 00081AAE            665         LEA      P_COMMA,A1
00001734  303C 000E                666         MOVE     #14,D0
00001738  4E4F                     667         TRAP     #15
0000173A  7C06                     668         MOVE.L   #6,D6
0000173C  4EB8 1244                669         JSR      CHK_EA_SOURCE
00001740                           670         
00001740  4E75                     671         RTS
00001742                           672  *-----------------------------------------------------------
00001742                           673  AND    
00001742  43F9 00081A48            674         LEA      AN,A1
00001748  103C 000E                675         MOVE.B   #14,D0
0000174C  4E4F                     676         TRAP     #15       
0000174E  4EB8 132E                677         JSR      LOGIC_SIZE_CHK
00001752  7C06                     678         MOVE.L   #6,D6
00001754  4EB8 12DC                679         JSR      LOGIC_PARAMETER_CHK  
00001758  4E75                     680         RTS
0000175A                           681  *-----------------------------------------------------------       
0000175A                           682  ADD    
0000175A  43F9 00081A4C            683         LEA      AD,A1
00001760  103C 000E                684         MOVE.B   #14,D0
00001764  4E4F                     685         TRAP     #15
00001766  4EB8 132E                686         JSR      LOGIC_SIZE_CHK
0000176A  BC7C 0008                687         CMP      #8,D6
0000176E  6700 000A                688         BEQ      IS_ADDA
00001772  7C06                     689         MOVE.L   #6,D6
00001774  4EB8 12DC                690         JSR      LOGIC_PARAMETER_CHK
00001778  4E75                     691         RTS
0000177A                           692  IS_ADDA
0000177A  4EB8 1244                693         JSR      CHK_EA_SOURCE
0000177E  43F9 00081AAE            694         LEA      P_COMMA,A1
00001784  303C 000E                695         MOVE     #14,D0
00001788  4E4F                     696         TRAP     #15
0000178A  4281                     697         CLR.L    D1
0000178C  3203                     698         MOVE.W   D3,D1
0000178E  0241 0E00                699         ANDI.W   #$0E00,D1
00001792  EF59                     700         ROL.W    #$07,D1
00001794  4EB8 13E8                701         JSR      M_AR
00001798  4E75                     702         RTS
0000179A                           703  *-----------------------------------------------------------
0000179A                           704  BRA    
0000179A  43F9 00081A50            705         LEA      BR,A1
000017A0  103C 000E                706         MOVE.B   #14,D0
000017A4  4E4F                     707         TRAP     #15
000017A6  4E75                     708         RTS
000017A8                           709  *-----------------------------------------------------------
000017A8                           710  BEQ    
000017A8  43F9 00081A55            711         LEA      BE,A1
000017AE  103C 000E                712         MOVE.B   #14,D0
000017B2  4E4F                     713         TRAP     #15
000017B4  4E75                     714         RTS
000017B6                           715  *-----------------------------------------------------------       
000017B6                           716  BGT    
000017B6  43F9 00081A5A            717         LEA      BG,A1
000017BC  103C 000E                718         MOVE.B   #14,D0
000017C0  4E4F                     719         TRAP     #15
000017C2  4E75                     720         RTS
000017C4                           721  *-----------------------------------------------------------       
000017C4  43F9 00081A5F            722  BLE    LEA      BL,A1
000017CA  103C 000E                723         MOVE.B   #14,D0
000017CE  4E4F                     724         TRAP     #15
000017D0  4E75                     725         RTS
000017D2                           726  *-----------------------------------------------------------       
000017D2                           727  ASR    
000017D2  43F9 00081A64            728         LEA      AR,A1
000017D8  103C 000E                729         MOVE.B   #14,D0
000017DC  4E4F                     730         TRAP     #15
000017DE  4E75                     731         RTS
000017E0                           732  *-----------------------------------------------------------       
000017E0                           733  ASL    
000017E0  43F9 00081A68            734         LEA      AL,A1
000017E6  103C 000E                735         MOVE.B   #14,D0
000017EA  4E4F                     736         TRAP     #15
000017EC  4E75                     737         RTS
000017EE                           738  *-----------------------------------------------------------       
000017EE                           739  LSR    
000017EE  43F9 00081A71            740         LEA      LR,A1
000017F4  103C 000E                741         MOVE.B   #14,D0
000017F8  4E4F                     742         TRAP     #15
000017FA  4E75                     743         RTS
000017FC                           744  *-----------------------------------------------------------       
000017FC                           745  LSL    
000017FC  43F9 00081A75            746         LEA      LL,A1
00001802  103C 000E                747         MOVE.B   #14,D0
00001806  4E4F                     748         TRAP     #15
00001808  4E75                     749         RTS
0000180A                           750  *-----------------------------------------------------------       
0000180A                           751  ROR    
0000180A  43F9 00081A79            752         LEA      RR,A1
00001810  103C 000E                753         MOVE.B   #14,D0
00001814  4E4F                     754         TRAP     #15
00001816  4E75                     755         RTS
00001818                           756  *-----------------------------------------------------------       
00001818                           757  ROL    
00001818  43F9 00081A7D            758         LEA      RL,A1
0000181E  103C 000E                759         MOVE.B   #14,D0
00001822  4E4F                     760         TRAP     #15
00001824  4E75                     761         RTS
00001826                           762  *-----------------------------------------------------------
00001826                           763  TESTBIT
00001826  4283                     764         CLR.L D3
00001828  3614                     765         MOVE.W   (A4),D3
0000182A  220D                     766         MOVE.L   A5,D1
0000182C  92B9 00001936            767         SUB.L    TREE,D1
00001832  E381                     768         ASL.L    #1,D1
00001834  2A41                     769         MOVEA.L  D1,A5
00001836  0503                     770         BTST.L   D2,D3
00001838  6700 0006                771         BEQ      IS_ZERO
0000183C  6000 0012                772         BRA      NOT_ZERO
00001840                           773      
00001840                           774  IS_ZERO   * if bit D2 of (A4) is zero (go left on tree)
00001840  5342                     775         SUBQ     #1,D2
00001842  584D                     776         ADDA.W   #4,A5
00001844  DBF9 00001936            777         ADDA.L   TREE,A5
0000184A  2255                     778         MOVEA.L  (A5),A1
0000184C  4E91                     779         JSR      (A1)
0000184E  4E75                     780         RTS
00001850                           781  
00001850                           782  NOT_ZERO  * if bit D2 of (A4) is one (go right on tree)
00001850  5342                     783         SUBQ     #1,D2
00001852  504D                     784         ADDA.W   #8,A5
00001854  DBF9 00001936            785         ADDA.L   TREE,A5
0000185A  2255                     786         MOVEA.L  (A5),A1
0000185C  4E91                     787         JSR      (A1)
0000185E  4E75                     788         RTS   
00001860                           789  * ----------------------------------------------------------
00001860                           790  * GETINPUT: gets hex value in ascii from user, puts it in D3   
00001860                           791  GETINPUT 
00001860  103C 0002                792         MOVE.B   #2,D0     * get user string
00001864  4E4F                     793         TRAP     #15      
00001866                           794  
00001866                           795  LOOP1  
00001866  E98B                     796         LSL.L    #4,D3       * get single char from string
00001868  1419                     797         MOVE.B   (A1)+,D2
0000186A  5341                     798         SUBI     #1,D1
0000186C  6000 0002                799         BRA      HEXVAL       
00001870                           800         
00001870                           801  HEXVAL 
00001870  0C02 0039                802         CMPI.B   #$39,D2     * convert ascii char value to hex
00001874  6E08                     803         BGT.B    LETTER
00001876  0402 0030                804         SUBI.B   #$30,D2
0000187A  6000 000A                805         BRA      WRITE
0000187E                           806      
0000187E                           807  LETTER 
0000187E  0402 0037                808         SUBI.B   #$37,D2
00001882  6000 0002                809         BRA      WRITE
00001886                           810      
00001886                           811  WRITE                     * write hex val to D3
00001886  D602                     812         ADD.B    D2,D3
00001888  0C01 0000                813         CMPI.B   #0,D1
0000188C  66D8                     814         BNE      LOOP1
0000188E  4E75                     815         RTS
00001890                           816  *-----------------------------------------------------------
00001890                           817  PRINTHEX 
00001890  1A3C 0001                818           MOVE.B #1,D5
00001894                           819  NEXTDIG  
00001894  2204                     820           MOVE.L D4,D1
00001896  E505                     821           ASL.B #2,D5
00001898  EBB9                     822           ROL.L D5,D1
0000189A  E405                     823           ASR.B #2,D5
0000189C                           824           
0000189C  C2BC 0000000F            825           AND.L #$0000000F,D1
000018A2  B23C 000F                826           CMP.B #$F,D1
000018A6  6700 0080                827           BEQ IF_F
000018AA  B23C 000E                828           CMP.B #$E,D1
000018AE  6700 006A                829           BEQ IF_E
000018B2  B23C 000D                830           CMP.B #$D,D1
000018B6  6700 0054                831           BEQ IF_D
000018BA  B23C 000C                832           CMP.B #$C,D1
000018BE  6700 003E                833           BEQ IF_C
000018C2  B23C 000B                834           CMP.B #$B,D1
000018C6  6700 0028                835           BEQ IF_B
000018CA  B23C 000A                836           CMP.B #$A,D1
000018CE  6700 0012                837           BEQ IF_A
000018D2                           838           
000018D2  103C 0003                839           MOVE.B #3,D0
000018D6  4E4F                     840           TRAP #15
000018D8                           841  LP_INC         
000018D8  5245                     842           ADDQ #1,D5
000018DA  BA3C 0008                843           CMP.B #8,D5
000018DE  6FB4                     844           BLE NEXTDIG
000018E0  4E75                     845           RTS
000018E2                           846           
000018E2                           847  
000018E2  43F9 00081A8E            848  IF_A LEA P_A,A1
000018E8  103C 000E                849       MOVE.B #14,D0
000018EC  4E4F                     850       TRAP #15
000018EE  60E8                     851       BRA LP_INC
000018F0                           852       
000018F0  43F9 00081A90            853  IF_B LEA P_B,A1
000018F6  103C 000E                854       MOVE.B #14,D0
000018FA  4E4F                     855       TRAP #15
000018FC  60DA                     856       BRA LP_INC
000018FE  43F9 00081A92            857  IF_C LEA P_C,A1
00001904  103C 000E                858       MOVE.B #14,D0
00001908  4E4F                     859       TRAP #15
0000190A  60CC                     860       BRA LP_INC
0000190C  43F9 00081A94            861  IF_D LEA P_D,A1
00001912  103C 000E                862       MOVE.B #14,D0
00001916  4E4F                     863       TRAP #15
00001918  60BE                     864       BRA LP_INC
0000191A  43F9 00081A96            865  IF_E LEA P_E,A1
00001920  103C 000E                866       MOVE.B #14,D0
00001924  4E4F                     867       TRAP #15
00001926  60B0                     868       BRA LP_INC
00001928  43F9 00081A98            869  IF_F LEA P_F,A1
0000192E  103C 000E                870       MOVE.B #14,D0
00001932  4E4F                     871       TRAP #15
00001934  60A2                     872       BRA LP_INC
00001936                           873  
00001936                           874  
00001936                           875      
00001936                           876  * var storage
00001936= 00007000                 877  TREE        DC.L    $7000  
0000193A= 00000500                 878  EA_TREE     DC.L    $0500
0000193E                           879  BEGIN       DS.L    $FFFF
0004193A                           880  END         DS.L    $FFFF  
00081936                           881  * string storage
00081936  =0000000D                882  CR          EQU     $0D
00081936  =00000009                883  LF          EQU     $09
00081936= 0D 09 00                 884  NEWLINE     DC.B    '',CR,LF,0
00081939= 50 6C 65 61 73 65 ...    885  PROMPT1     DC.B    'Please enter the memory value of the start of the program: ',0
00081975= 50 6C 65 61 73 65 ...    886  PROMPT2     DC.B    'Please enter the memory value of the end of the program: ',0
000819AF= 54 68 65 20 70 72 ...    887  UNDEFINED   DC.B    'The program should never reach this state.',0
000819DA= 54 68 65 20 64 61 ...    888  BADDATA     DC.B    'The data on line ____ is not a valid opcode.',CR,LF,0
00081A09= 4D 4F 56 45 51 20 00     889  MQ          DC.B    'MOVEQ ',0
00081A10= 4D 4F 56 45 2E 42 ...    890  MB          DC.B    'MOVE.B ',0
00081A18= 4D 4F 56 45 41 2E ...    891  MAL         DC.B    'MOVEA.L ',0
00081A21= 4D 4F 56 45 41 2E ...    892  MAW         DC.B    'MOVEA.W ',0
00081A2A= 4D 4F 56 45 2E 4C ...    893  ML          DC.B    'MOVE.L ',0
00081A32= 4D 4F 56 45 2E 57 ...    894  MW          DC.B    'MOVE.W ',0
00081A3A= 4E 4F 50 00              895  NP          DC.B    'NOP',0
00081A3E= 4E 4F 54 00              896  NT          DC.B    'NOT',0
00081A42= 41 44 44 51 20 00        897  AQ          DC.B    'ADDQ ',0
00081A48= 41 4E 44 00              898  AN          DC.B    'AND',0
00081A4C= 41 44 44 00              899  AD          DC.B    'ADD',0
00081A50= 42 52 41 20 00           900  BR          DC.B    'BRA ',0
00081A55= 42 45 51 20 00           901  BE          DC.B    'BEQ ',0
00081A5A= 42 47 54 20 00           902  BG          DC.B    'BGT ',0
00081A5F= 42 4C 45 20 00           903  BL          DC.B    'BLE ',0
00081A64= 41 53 52 00              904  AR          DC.B    'ASR',0
00081A68= 41 53 4C 00              905  AL          DC.B    'ASL',0
00081A6C= 4C 45 41 20 00           906  LA          DC.B    'LEA ',0
00081A71= 4C 53 52 00              907  LR          DC.B    'LSR',0
00081A75= 4C 53 4C 00              908  LL          DC.B    'LSL',0
00081A79= 52 4F 52 00              909  RR          DC.B    'ROR',0
00081A7D= 52 4F 4C 00              910  RL          DC.B    'ROL',0
00081A81= 53 55 42 00              911  SB          DC.B    'SUB',0
00081A85= 4A 53 52 20 00           912  JS          DC.B    'JSR ',0
00081A8A= 52 54 53 00              913  RT          DC.B    'RTS',0
00081A8E                           914  
00081A8E                           915  ;necessary symbols for displaying EA's
00081A8E= 41 00                    916  P_A         DC.B    'A',0
00081A90= 42 00                    917  P_B         DC.B    'B',0
00081A92= 43 00                    918  P_C         DC.B    'C',0
00081A94= 44 00                    919  P_D         DC.B    'D',0
00081A96= 45 00                    920  P_E         DC.B    'E',0
00081A98= 46 00                    921  P_F         DC.B    'F',0
00081A9A= 57 00                    922  P_W         DC.B    'W',0
00081A9C= 4C 00                    923  P_L         DC.B    'L',0
00081A9E= 2E 00                    924  P_PERIOD    DC.B    '.',0
00081AA0= 28 00                    925  P_OPEN_PAR  DC.B    '(',0
00081AA2= 29 00                    926  P_CLOSE_PAR DC.B    ')',0
00081AA4= 2B 00                    927  P_PLUS      DC.B    '+',0
00081AA6= 2D 00                    928  P_MINUS     DC.B    '-',0
00081AA8= 23 00                    929  P_HASH      DC.B    '#',0
00081AAA= 24 00                    930  P_HEX       DC.B    '$',0
00081AAC= 25 00                    931  P_BINARY    DC.B    '%',0
00081AAE= 2C 00                    932  P_COMMA     DC.B    ',',0
00081AB0= 20 00                    933  P_SPACE     DC.B    ' ',0
00081AB2= 0D 09 00                 934  NXT_LINE    DC.B    '',CR,LF,0
00081AB5                           935  
00081AB5                           936              END     START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AD                  81A4C
ADD                 175A
ADDQ                16F8
AL                  81A68
AN                  81A48
AND                 1742
AQ                  81A42
AR                  81A64
ASL                 17E0
ASR                 17D2
BAD                 154C
BADDATA             819DA
BE                  81A55
BEGIN               193E
BEQ                 17A8
BG                  81A5A
BGT                 17B6
BL                  81A5F
BLDLOOP             107C
BLE                 17C4
BR                  81A50
BRA                 179A
BREAKL              15C2
BREAKW              15FE
BUILDTREE           1072
BUILD_EA_TREE       1206
CHK_EA_DEST         127A
CHK_EA_SOURCE       1244
CR                  D
DECODE_OP           11F6
DONE                103A
EA_TREE             193A
END                 4193A
GETINPUT            1860
HEXVAL              1870
IA_ADDA_SIZE        14E8
IA_LOGIC_SIZE       14D2
IA_LONG             14FE
IA_WORD             1508
IF_A                18E2
IF_B                18F0
IF_C                18FE
IF_D                190C
IF_E                191A
IF_F                1928
IS_ABS_IMM          12AA
IS_ADDA             177A
IS_DEST             12BC
IS_SOURCE           12C6
IS_ZERO             1840
JS                  81A85
JSR                 16C8
LA                  81A6C
LEA                 169A
LETTER              187E
LF                  9
LL                  81A75
LOGIC_A             13B0
LOGIC_BYTE          135C
LOGIC_DONE          13C6
LOGIC_LONG          1394
LOGIC_PARAMETER_CHK  12DC
LOGIC_SIZE_CHK      132E
LOGIC_TOEA          130C
LOGIC_WORD          1378
LOOP1               1866
LP_INC              18D8
LR                  81A71
LSL                 17FC
LSR                 17EE
MAL                 81A18
MAW                 81A21
MB                  81A10
ML                  81A2A
MOVEAL              15DE
MOVEAW              161A
MOVEB               155C
MOVEL               15AA
MOVEQ               157E
MOVEW               15E6
MQ                  81A09
MW                  81A32
M_ALA               1512
M_APD               145A
M_API               1422
M_AR                13E8
M_AWA               1528
M_DIR_A             13FC
M_DR                13D4
M_IA                1492
NEWLINE             81936
NEXTDIG             1894
NEXTLINE            1020
NOP                 16EA
NOPETC              163A
NOT                 1682
NOT_ZERO            1850
NP                  81A3A
NT                  81A3E
NXT_LINE            81AB2
PRINTHEX            1890
PROMPT1             81939
PROMPT2             81975
P_A                 81A8E
P_B                 81A90
P_BINARY            81AAC
P_C                 81A92
P_CLOSE_PAR         81AA2
P_COMMA             81AAE
P_D                 81A94
P_E                 81A96
P_F                 81A98
P_HASH              81AA8
P_HEX               81AAA
P_L                 81A9C
P_MINUS             81AA6
P_OPEN_PAR          81AA0
P_PERIOD            81A9E
P_PLUS              81AA4
P_SPACE             81AB0
P_W                 81A9A
RL                  81A7D
ROL                 1818
ROR                 180A
RR                  81A79
RT                  81A8A
RTS                 16DC
SB                  81A81
SHIFT_ROTATION_PARAMETER_CHK  13D4
START               1000
SUB                 1622
TESTBIT             1826
TREE                1936
UNDEF               153E
UNDEFINED           819AF
WELCOME             1040
WRITE               1886
